{
    "name": "nexus",
    "displayName": "Nexus",
    "description": "A Pulumi package for creating and managing SonaType Nexus resources.",
    "keywords": [
        "pulumi",
        "nexus",
        "category/cloud"
    ],
    "homepage": "https://github.com/SimCubeLtd/pulumi-nexus",
    "license": "MIT",
    "attribution": "This Pulumi package is based on the [`nexus` Terraform Provider](https://github.com/datadrivers/terraform-provider-nexus).",
    "repository": "https://github.com/SimCubeLtd/pulumi-nexus",
    "logoUrl": "https://digital.ai/sites/default/files/pictures/styles/maxwidth_300/public/pt_logos/NexusRepo_Icon.png",
    "pluginDownloadURL": "https://github.com/SimCubeLtd/pulumi-nexus/releases/download/v${VERSION}",
    "publisher": "SimCubeLtd",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "insecure": {
                "type": "boolean",
                "description": "Boolean to specify wether insecure SSL connections are allowed or not. Reading environment variable\nNEXUS_INSECURE_SKIP_VERIFY. Default:`true`\n"
            },
            "password": {
                "type": "string",
                "description": "Password of user to connect to API. Reading environment variable NEXUS_PASSWORD. Default:`admin123`\n"
            },
            "url": {
                "type": "string",
                "description": "URL of Nexus to reach API. Reading environment variable NEXUS_URL. Default:`http://127.0.0.1:8080`\n"
            },
            "username": {
                "type": "string",
                "description": "Username used to connect to API. Reading environment variable NEXUS_USERNAME. Default:`admin`\n"
            }
        },
        "defaults": [
            "password",
            "url",
            "username"
        ]
    },
    "types": {
        "nexus:index/GetNexusBlobstoreAzureBucketConfiguration:GetNexusBlobstoreAzureBucketConfiguration": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreAzureBucketConfigurationAuthentication:GetNexusBlobstoreAzureBucketConfigurationAuthentication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "authentications",
                "containerName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreAzureBucketConfigurationAuthentication:GetNexusBlobstoreAzureBucketConfigurationAuthentication": {
            "properties": {
                "authenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authenticationMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreAzureSoftQuota:GetNexusBlobstoreAzureSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreBucketConfiguration:GetNexusBlobstoreBucketConfiguration": {
            "properties": {
                "advancedBucketConnection": {
                    "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfigurationAdvancedBucketConnection:GetNexusBlobstoreBucketConfigurationAdvancedBucketConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucket": {
                    "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfigurationBucket:GetNexusBlobstoreBucketConfigurationBucket",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketSecurity": {
                    "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfigurationBucketSecurity:GetNexusBlobstoreBucketConfigurationBucketSecurity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryption": {
                    "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfigurationEncryption:GetNexusBlobstoreBucketConfigurationEncryption",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "bucketSecurity"
            ]
        },
        "nexus:index/GetNexusBlobstoreBucketConfigurationAdvancedBucketConnection:GetNexusBlobstoreBucketConfigurationAdvancedBucketConnection": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forcePathStyle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusBlobstoreBucketConfigurationBucket:GetNexusBlobstoreBucketConfigurationBucket": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "region"
            ]
        },
        "nexus:index/GetNexusBlobstoreBucketConfigurationBucketSecurity:GetNexusBlobstoreBucketConfigurationBucketSecurity": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretAccessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "secretAccessKey"
            ]
        },
        "nexus:index/GetNexusBlobstoreBucketConfigurationEncryption:GetNexusBlobstoreBucketConfigurationEncryption": {
            "properties": {
                "encryptionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusBlobstoreFileSoftQuota:GetNexusBlobstoreFileSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreGroupSoftQuota:GetNexusBlobstoreGroupSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3BucketConfiguration:GetNexusBlobstoreS3BucketConfiguration": {
            "properties": {
                "advancedBucketConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreS3BucketConfigurationAdvancedBucketConnection:GetNexusBlobstoreS3BucketConfigurationAdvancedBucketConnection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketSecurities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreS3BucketConfigurationBucketSecurity:GetNexusBlobstoreS3BucketConfigurationBucketSecurity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreS3BucketConfigurationBucket:GetNexusBlobstoreS3BucketConfigurationBucket"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreS3BucketConfigurationEncryption:GetNexusBlobstoreS3BucketConfigurationEncryption"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "advancedBucketConnections",
                "buckets",
                "bucketSecurities",
                "encryptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3BucketConfigurationAdvancedBucketConnection:GetNexusBlobstoreS3BucketConfigurationAdvancedBucketConnection": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forcePathStyle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "forcePathStyle",
                "signerType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3BucketConfigurationBucket:GetNexusBlobstoreS3BucketConfigurationBucket": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expiration",
                "name",
                "prefix",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3BucketConfigurationBucketSecurity:GetNexusBlobstoreS3BucketConfigurationBucketSecurity": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretAccessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "role",
                "secretAccessKey",
                "sessionToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3BucketConfigurationEncryption:GetNexusBlobstoreS3BucketConfigurationEncryption": {
            "properties": {
                "encryptionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "encryptionKey",
                "encryptionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreS3SoftQuota:GetNexusBlobstoreS3SoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusBlobstoreSoftQuota:GetNexusBlobstoreSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusPrivilegesPrivilege:GetNexusPrivilegesPrivilege": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentSelector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actions",
                "contentSelector",
                "description",
                "domain",
                "format",
                "name",
                "pattern",
                "readOnly",
                "repository",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryApt:GetNexusRepositoryApt": {
            "properties": {
                "distribution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "distribution"
            ]
        },
        "nexus:index/GetNexusRepositoryAptHostedCleanup:GetNexusRepositoryAptHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptHostedComponent:GetNexusRepositoryAptHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptHostedStorage:GetNexusRepositoryAptHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation",
                "writePolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyCleanup:GetNexusRepositoryAptProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyHttpClient:GetNexusRepositoryAptProxyHttpClient": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyHttpClientAuthentication:GetNexusRepositoryAptProxyHttpClientAuthentication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyHttpClientConnection:GetNexusRepositoryAptProxyHttpClientConnection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "autoBlock",
                "blocked",
                "connections"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyHttpClientAuthentication:GetNexusRepositoryAptProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ntlmDomain",
                "ntlmHost",
                "password",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyHttpClientConnection:GetNexusRepositoryAptProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableCircularRedirects",
                "enableCookies",
                "retries",
                "timeout",
                "useTrustStore",
                "userAgentSuffix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyNegativeCach:GetNexusRepositoryAptProxyNegativeCach": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyProxy:GetNexusRepositoryAptProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contentMaxAge",
                "metadataMaxAge",
                "remoteUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptProxyStorage:GetNexusRepositoryAptProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryAptSigning:GetNexusRepositoryAptSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair",
                "passphrase"
            ]
        },
        "nexus:index/GetNexusRepositoryCleanup:GetNexusRepositoryCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ]
        },
        "nexus:index/GetNexusRepositoryDocker:GetNexusRepositoryDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryDockerGroupDocker:GetNexusRepositoryDockerGroupDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "httpPort",
                "httpsPort",
                "v1Enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerGroupGroup:GetNexusRepositoryDockerGroupGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writableMember": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames",
                "writableMember"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerGroupStorage:GetNexusRepositoryDockerGroupStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerHostedCleanup:GetNexusRepositoryDockerHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerHostedComponent:GetNexusRepositoryDockerHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerHostedDocker:GetNexusRepositoryDockerHostedDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "httpPort",
                "httpsPort",
                "v1Enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerHostedStorage:GetNexusRepositoryDockerHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation",
                "writePolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyCleanup:GetNexusRepositoryDockerProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyDocker:GetNexusRepositoryDockerProxyDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "httpPort",
                "httpsPort",
                "v1Enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyDockerProxy:GetNexusRepositoryDockerProxyDockerProxy": {
            "properties": {
                "indexType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "indexType",
                "indexUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyHttpClient:GetNexusRepositoryDockerProxyHttpClient": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyHttpClientAuthentication:GetNexusRepositoryDockerProxyHttpClientAuthentication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyHttpClientConnection:GetNexusRepositoryDockerProxyHttpClientConnection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "autoBlock",
                "blocked",
                "connections"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyHttpClientAuthentication:GetNexusRepositoryDockerProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ntlmDomain",
                "ntlmHost",
                "password",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyHttpClientConnection:GetNexusRepositoryDockerProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableCircularRedirects",
                "enableCookies",
                "retries",
                "timeout",
                "useTrustStore",
                "userAgentSuffix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyNegativeCach:GetNexusRepositoryDockerProxyNegativeCach": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyProxy:GetNexusRepositoryDockerProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contentMaxAge",
                "metadataMaxAge",
                "remoteUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryDockerProxyStorage:GetNexusRepositoryDockerProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryGroup:GetNexusRepositoryGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames"
            ]
        },
        "nexus:index/GetNexusRepositoryHttpClient:GetNexusRepositoryHttpClient": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/nexus:index/GetNexusRepositoryHttpClientAuthentication:GetNexusRepositoryHttpClientAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryHttpClientConnection:GetNexusRepositoryHttpClientConnection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryHttpClientAuthentication:GetNexusRepositoryHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "nexus:index/GetNexusRepositoryHttpClientConnection:GetNexusRepositoryHttpClientConnection": {
            "properties": {
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryListItem:GetNexusRepositoryListItem": {
            "properties": {
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "format",
                "name",
                "type",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryMaven:GetNexusRepositoryMaven": {
            "properties": {
                "layoutPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryNegativeCache:GetNexusRepositoryNegativeCache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryProxy:GetNexusRepositoryProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "remoteUrl"
            ]
        },
        "nexus:index/GetNexusRepositoryStorage:GetNexusRepositoryStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/GetNexusRepositoryYumGroupGroup:GetNexusRepositoryYumGroupGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumGroupStorage:GetNexusRepositoryYumGroupStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumGroupYumSigning:GetNexusRepositoryYumGroupYumSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair",
                "passphrase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumHostedCleanup:GetNexusRepositoryYumHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumHostedComponent:GetNexusRepositoryYumHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumHostedStorage:GetNexusRepositoryYumHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation",
                "writePolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyCleanup:GetNexusRepositoryYumProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policyNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyHttpClient:GetNexusRepositoryYumProxyHttpClient": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyHttpClientAuthentication:GetNexusRepositoryYumProxyHttpClientAuthentication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyHttpClientConnection:GetNexusRepositoryYumProxyHttpClientConnection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "autoBlock",
                "blocked",
                "connections"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyHttpClientAuthentication:GetNexusRepositoryYumProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ntlmDomain",
                "ntlmHost",
                "password",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyHttpClientConnection:GetNexusRepositoryYumProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableCircularRedirects",
                "enableCookies",
                "retries",
                "timeout",
                "useTrustStore",
                "userAgentSuffix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyNegativeCach:GetNexusRepositoryYumProxyNegativeCach": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyProxy:GetNexusRepositoryYumProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contentMaxAge",
                "metadataMaxAge",
                "remoteUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyStorage:GetNexusRepositoryYumProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusRepositoryYumProxyYumSigning:GetNexusRepositoryYumProxyYumSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair",
                "passphrase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusSecurityLdapLdap:GetNexusSecurityLdapLdap": {
            "properties": {
                "authPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionRetryDelaySeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBaseDn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupIdAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMemberFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupObjectClass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupSubtree": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ldapGroupsAsRoles": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncidentCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userBaseDn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userEmailAddressAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userIdAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userLdapFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userMemberOfAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userObjectClass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userPasswordAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userRealNameAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSubtree": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authPassword",
                "authRealm",
                "authSchema",
                "authUsername",
                "connectionRetryDelaySeconds",
                "connectionTimeoutSeconds",
                "groupBaseDn",
                "groupIdAttribute",
                "groupMemberAttribute",
                "groupMemberFormat",
                "groupObjectClass",
                "groupSubtree",
                "groupType",
                "host",
                "id",
                "ldapGroupsAsRoles",
                "maxIncidentCount",
                "name",
                "port",
                "protocol",
                "searchBase",
                "useTrustStore",
                "userBaseDn",
                "userEmailAddressAttribute",
                "userIdAttribute",
                "userLdapFilter",
                "userMemberOfAttribute",
                "userObjectClass",
                "userPasswordAttribute",
                "userRealNameAttribute",
                "userSubtree"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusSecurityRealmsActive:GetNexusSecurityRealmsActive": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/GetNexusSecurityRealmsAvailable:GetNexusSecurityRealmsAvailable": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nexus:index/NexusBlobstoreAzureBucketConfiguration:NexusBlobstoreAzureBucketConfiguration": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authentication": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreAzureBucketConfigurationAuthentication:NexusBlobstoreAzureBucketConfigurationAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "authentication",
                "containerName"
            ]
        },
        "nexus:index/NexusBlobstoreAzureBucketConfigurationAuthentication:NexusBlobstoreAzureBucketConfigurationAuthentication": {
            "properties": {
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authenticationMethod"
            ]
        },
        "nexus:index/NexusBlobstoreAzureSoftQuota:NexusBlobstoreAzureSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ]
        },
        "nexus:index/NexusBlobstoreBucketConfiguration:NexusBlobstoreBucketConfiguration": {
            "properties": {
                "advancedBucketConnection": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfigurationAdvancedBucketConnection:NexusBlobstoreBucketConfigurationAdvancedBucketConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucket": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfigurationBucket:NexusBlobstoreBucketConfigurationBucket",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketSecurity": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfigurationBucketSecurity:NexusBlobstoreBucketConfigurationBucketSecurity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryption": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfigurationEncryption:NexusBlobstoreBucketConfigurationEncryption",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "nexus:index/NexusBlobstoreBucketConfigurationAdvancedBucketConnection:NexusBlobstoreBucketConfigurationAdvancedBucketConnection": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forcePathStyle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusBlobstoreBucketConfigurationBucket:NexusBlobstoreBucketConfigurationBucket": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "region"
            ]
        },
        "nexus:index/NexusBlobstoreBucketConfigurationBucketSecurity:NexusBlobstoreBucketConfigurationBucketSecurity": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretAccessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "secretAccessKey"
            ]
        },
        "nexus:index/NexusBlobstoreBucketConfigurationEncryption:NexusBlobstoreBucketConfigurationEncryption": {
            "properties": {
                "encryptionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusBlobstoreFileSoftQuota:NexusBlobstoreFileSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ]
        },
        "nexus:index/NexusBlobstoreGroupSoftQuota:NexusBlobstoreGroupSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ]
        },
        "nexus:index/NexusBlobstoreS3BucketConfiguration:NexusBlobstoreS3BucketConfiguration": {
            "properties": {
                "advancedBucketConnection": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfigurationAdvancedBucketConnection:NexusBlobstoreS3BucketConfigurationAdvancedBucketConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucket": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfigurationBucket:NexusBlobstoreS3BucketConfigurationBucket",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketSecurity": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfigurationBucketSecurity:NexusBlobstoreS3BucketConfigurationBucketSecurity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryption": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfigurationEncryption:NexusBlobstoreS3BucketConfigurationEncryption",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "nexus:index/NexusBlobstoreS3BucketConfigurationAdvancedBucketConnection:NexusBlobstoreS3BucketConfigurationAdvancedBucketConnection": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forcePathStyle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionPoolSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusBlobstoreS3BucketConfigurationBucket:NexusBlobstoreS3BucketConfigurationBucket": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expiration",
                "name",
                "region"
            ]
        },
        "nexus:index/NexusBlobstoreS3BucketConfigurationBucketSecurity:NexusBlobstoreS3BucketConfigurationBucketSecurity": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretAccessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusBlobstoreS3BucketConfigurationEncryption:NexusBlobstoreS3BucketConfigurationEncryption": {
            "properties": {
                "encryptionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusBlobstoreS3SoftQuota:NexusBlobstoreS3SoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ]
        },
        "nexus:index/NexusBlobstoreSoftQuota:NexusBlobstoreSoftQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type"
            ]
        },
        "nexus:index/NexusRepositoryApt:NexusRepositoryApt": {
            "properties": {
                "distribution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flat": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "distribution"
            ]
        },
        "nexus:index/NexusRepositoryAptHostedCleanup:NexusRepositoryAptHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryAptHostedComponent:NexusRepositoryAptHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ]
        },
        "nexus:index/NexusRepositoryAptHostedSigning:NexusRepositoryAptHostedSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair"
            ]
        },
        "nexus:index/NexusRepositoryAptHostedStorage:NexusRepositoryAptHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ]
        },
        "nexus:index/NexusRepositoryAptProxyCleanup:NexusRepositoryAptProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryAptProxyHttpClient:NexusRepositoryAptProxyHttpClient": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyHttpClientAuthentication:NexusRepositoryAptProxyHttpClientAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyHttpClientConnection:NexusRepositoryAptProxyHttpClientConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connection"
                    ]
                }
            }
        },
        "nexus:index/NexusRepositoryAptProxyHttpClientAuthentication:NexusRepositoryAptProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "nexus:index/NexusRepositoryAptProxyHttpClientConnection:NexusRepositoryAptProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryAptProxyNegativeCache:NexusRepositoryAptProxyNegativeCache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryAptProxyProxy:NexusRepositoryAptProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "remoteUrl"
            ]
        },
        "nexus:index/NexusRepositoryAptProxyStorage:NexusRepositoryAptProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName"
            ]
        },
        "nexus:index/NexusRepositoryAptSigning:NexusRepositoryAptSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair",
                "passphrase"
            ]
        },
        "nexus:index/NexusRepositoryBower:NexusRepositoryBower": {
            "properties": {
                "rewritePackageUrls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryCleanup:NexusRepositoryCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDocker:NexusRepositoryDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDockerGroupDocker:NexusRepositoryDockerGroupDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "v1Enabled"
            ]
        },
        "nexus:index/NexusRepositoryDockerGroupGroup:NexusRepositoryDockerGroupGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writableMember": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames"
            ]
        },
        "nexus:index/NexusRepositoryDockerGroupStorage:NexusRepositoryDockerGroupStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName"
            ]
        },
        "nexus:index/NexusRepositoryDockerHostedCleanup:NexusRepositoryDockerHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDockerHostedComponent:NexusRepositoryDockerHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ]
        },
        "nexus:index/NexusRepositoryDockerHostedDocker:NexusRepositoryDockerHostedDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "v1Enabled"
            ]
        },
        "nexus:index/NexusRepositoryDockerHostedStorage:NexusRepositoryDockerHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxy:NexusRepositoryDockerProxy": {
            "properties": {
                "indexType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "indexType"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxyCleanup:NexusRepositoryDockerProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDockerProxyDocker:NexusRepositoryDockerProxyDocker": {
            "properties": {
                "forceBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "v1Enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "forceBasicAuth",
                "v1Enabled"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxyDockerProxy:NexusRepositoryDockerProxyDockerProxy": {
            "properties": {
                "indexType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "indexType"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxyHttpClient:NexusRepositoryDockerProxyHttpClient": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyHttpClientAuthentication:NexusRepositoryDockerProxyHttpClientAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyHttpClientConnection:NexusRepositoryDockerProxyHttpClientConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connection"
                    ]
                }
            }
        },
        "nexus:index/NexusRepositoryDockerProxyHttpClientAuthentication:NexusRepositoryDockerProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxyHttpClientConnection:NexusRepositoryDockerProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDockerProxyNegativeCache:NexusRepositoryDockerProxyNegativeCache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryDockerProxyProxy:NexusRepositoryDockerProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "remoteUrl"
            ]
        },
        "nexus:index/NexusRepositoryDockerProxyStorage:NexusRepositoryDockerProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName"
            ]
        },
        "nexus:index/NexusRepositoryGroup:NexusRepositoryGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames"
            ]
        },
        "nexus:index/NexusRepositoryHttpClient:NexusRepositoryHttpClient": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/nexus:index/NexusRepositoryHttpClientAuthentication:NexusRepositoryHttpClientAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "$ref": "#/types/nexus:index/NexusRepositoryHttpClientConnection:NexusRepositoryHttpClientConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryHttpClientAuthentication:NexusRepositoryHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryHttpClientConnection:NexusRepositoryHttpClientConnection": {
            "properties": {
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryMaven:NexusRepositoryMaven": {
            "properties": {
                "layoutPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryMavenHostedCleanup:NexusRepositoryMavenHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryMavenHostedComponent:NexusRepositoryMavenHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ]
        },
        "nexus:index/NexusRepositoryMavenHostedMaven:NexusRepositoryMavenHostedMaven": {
            "properties": {
                "contentDisposition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layoutPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryMavenHostedStorage:NexusRepositoryMavenHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ]
        },
        "nexus:index/NexusRepositoryNegativeCache:NexusRepositoryNegativeCache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryNugetProxy:NexusRepositoryNugetProxy": {
            "properties": {
                "nugetVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryCacheItemMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "queryCacheItemMaxAge"
            ]
        },
        "nexus:index/NexusRepositoryProxy:NexusRepositoryProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryStorage:NexusRepositoryStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryYum:NexusRepositoryYum": {
            "properties": {
                "deployPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repodataDepth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deployPolicy"
            ]
        },
        "nexus:index/NexusRepositoryYumGroupGroup:NexusRepositoryYumGroupGroup": {
            "properties": {
                "memberNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberNames"
            ]
        },
        "nexus:index/NexusRepositoryYumGroupStorage:NexusRepositoryYumGroupStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName"
            ]
        },
        "nexus:index/NexusRepositoryYumGroupYumSigning:NexusRepositoryYumGroupYumSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair"
            ]
        },
        "nexus:index/NexusRepositoryYumHostedCleanup:NexusRepositoryYumHostedCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryYumHostedComponent:NexusRepositoryYumHostedComponent": {
            "properties": {
                "proprietaryComponents": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "proprietaryComponents"
            ]
        },
        "nexus:index/NexusRepositoryYumHostedStorage:NexusRepositoryYumHostedStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName",
                "strictContentTypeValidation"
            ]
        },
        "nexus:index/NexusRepositoryYumProxyCleanup:NexusRepositoryYumProxyCleanup": {
            "properties": {
                "policyNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryYumProxyHttpClient:NexusRepositoryYumProxyHttpClient": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyHttpClientAuthentication:NexusRepositoryYumProxyHttpClientAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoBlock": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyHttpClientConnection:NexusRepositoryYumProxyHttpClientConnection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connection"
                    ]
                }
            }
        },
        "nexus:index/NexusRepositoryYumProxyHttpClientAuthentication:NexusRepositoryYumProxyHttpClientAuthentication": {
            "properties": {
                "ntlmDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ntlmHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "nexus:index/NexusRepositoryYumProxyHttpClientConnection:NexusRepositoryYumProxyHttpClientConnection": {
            "properties": {
                "enableCircularRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCookies": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTrustStore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryYumProxyNegativeCache:NexusRepositoryYumProxyNegativeCache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nexus:index/NexusRepositoryYumProxyProxy:NexusRepositoryYumProxyProxy": {
            "properties": {
                "contentMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "remoteUrl"
            ]
        },
        "nexus:index/NexusRepositoryYumProxyStorage:NexusRepositoryYumProxyStorage": {
            "properties": {
                "blobStoreName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strictContentTypeValidation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blobStoreName"
            ]
        },
        "nexus:index/NexusRepositoryYumProxyYumSigning:NexusRepositoryYumProxyYumSigning": {
            "properties": {
                "keypair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "keypair"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the nexus package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "insecure": {
                "type": "boolean",
                "description": "Boolean to specify wether insecure SSL connections are allowed or not. Reading environment variable\nNEXUS_INSECURE_SKIP_VERIFY. Default:`true`\n"
            },
            "password": {
                "type": "string",
                "description": "Password of user to connect to API. Reading environment variable NEXUS_PASSWORD. Default:`admin123`\n"
            },
            "url": {
                "type": "string",
                "description": "URL of Nexus to reach API. Reading environment variable NEXUS_URL. Default:`http://127.0.0.1:8080`\n"
            },
            "username": {
                "type": "string",
                "description": "Username used to connect to API. Reading environment variable NEXUS_USERNAME. Default:`admin`\n"
            }
        },
        "required": [
            "password",
            "url",
            "username"
        ],
        "inputProperties": {
            "insecure": {
                "type": "boolean",
                "description": "Boolean to specify wether insecure SSL connections are allowed or not. Reading environment variable\nNEXUS_INSECURE_SKIP_VERIFY. Default:`true`\n"
            },
            "password": {
                "type": "string",
                "description": "Password of user to connect to API. Reading environment variable NEXUS_PASSWORD. Default:`admin123`\n"
            },
            "url": {
                "type": "string",
                "description": "URL of Nexus to reach API. Reading environment variable NEXUS_URL. Default:`http://127.0.0.1:8080`\n"
            },
            "username": {
                "type": "string",
                "description": "Username used to connect to API. Reading environment variable NEXUS_USERNAME. Default:`admin`\n"
            }
        },
        "requiredInputs": [
            "password",
            "url",
            "username"
        ]
    },
    "resources": {
        "nexus:index/nexusAnonymous:NexusAnonymous": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the anonymous access to the repository manager. Default: false\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                }
            },
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the anonymous access to the repository manager. Default: false\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusAnonymous resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Activate the anonymous access to the repository manager. Default: false\n"
                    },
                    "realmName": {
                        "type": "string",
                        "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusBlobstore:NexusBlobstore": {
            "properties": {
                "availableSpaceInBytes": {
                    "type": "string",
                    "description": "Available space in Bytes\n"
                },
                "blobCount": {
                    "type": "integer",
                    "description": "Count of blobs\n"
                },
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfiguration:NexusBlobstoreBucketConfiguration",
                    "description": "The S3 bucket configuration. Needed for blobstore type 'S3'\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreSoftQuota:NexusBlobstoreSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "totalSizeInBytes": {
                    "type": "integer",
                    "description": "The total size of the blobstore in Bytes\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the blobstore. Possible values: `S3` or `File`\n"
                }
            },
            "required": [
                "availableSpaceInBytes",
                "blobCount",
                "name",
                "totalSizeInBytes",
                "type"
            ],
            "inputProperties": {
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfiguration:NexusBlobstoreBucketConfiguration",
                    "description": "The S3 bucket configuration. Needed for blobstore type 'S3'\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreSoftQuota:NexusBlobstoreSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the blobstore. Possible values: `S3` or `File`\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusBlobstore resources.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "string",
                        "description": "Available space in Bytes\n"
                    },
                    "blobCount": {
                        "type": "integer",
                        "description": "Count of blobs\n"
                    },
                    "bucketConfiguration": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreBucketConfiguration:NexusBlobstoreBucketConfiguration",
                        "description": "The S3 bucket configuration. Needed for blobstore type 'S3'\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Blobstore name\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreSoftQuota:NexusBlobstoreSoftQuota",
                        "description": "Soft quota of the blobstore\n"
                    },
                    "totalSizeInBytes": {
                        "type": "integer",
                        "description": "The total size of the blobstore in Bytes\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the blobstore. Possible values: `S3` or `File`\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusBlobstoreAzure:NexusBlobstoreAzure": {
            "properties": {
                "blobCount": {
                    "type": "integer",
                    "description": "Count of blobs\n"
                },
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreAzureBucketConfiguration:NexusBlobstoreAzureBucketConfiguration",
                    "description": "The Azure specific configuration details for the Azure object that'll contain the blob store\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreAzureSoftQuota:NexusBlobstoreAzureSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "totalSizeInBytes": {
                    "type": "integer",
                    "description": "The total size of the blobstore in Bytes\n"
                }
            },
            "required": [
                "blobCount",
                "bucketConfiguration",
                "name",
                "totalSizeInBytes"
            ],
            "inputProperties": {
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreAzureBucketConfiguration:NexusBlobstoreAzureBucketConfiguration",
                    "description": "The Azure specific configuration details for the Azure object that'll contain the blob store\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreAzureSoftQuota:NexusBlobstoreAzureSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                }
            },
            "requiredInputs": [
                "bucketConfiguration"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusBlobstoreAzure resources.\n",
                "properties": {
                    "blobCount": {
                        "type": "integer",
                        "description": "Count of blobs\n"
                    },
                    "bucketConfiguration": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreAzureBucketConfiguration:NexusBlobstoreAzureBucketConfiguration",
                        "description": "The Azure specific configuration details for the Azure object that'll contain the blob store\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Blobstore name\n"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreAzureSoftQuota:NexusBlobstoreAzureSoftQuota",
                        "description": "Soft quota of the blobstore\n"
                    },
                    "totalSizeInBytes": {
                        "type": "integer",
                        "description": "The total size of the blobstore in Bytes\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusBlobstoreFile:NexusBlobstoreFile": {
            "properties": {
                "availableSpaceInBytes": {
                    "type": "integer",
                    "description": "Available space in Bytes\n"
                },
                "blobCount": {
                    "type": "integer",
                    "description": "Count of blobs\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreFileSoftQuota:NexusBlobstoreFileSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "totalSizeInBytes": {
                    "type": "integer",
                    "description": "The total size of the blobstore in Bytes\n"
                }
            },
            "required": [
                "availableSpaceInBytes",
                "blobCount",
                "name",
                "totalSizeInBytes"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreFileSoftQuota:NexusBlobstoreFileSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusBlobstoreFile resources.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "integer",
                        "description": "Available space in Bytes\n"
                    },
                    "blobCount": {
                        "type": "integer",
                        "description": "Count of blobs\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Blobstore name\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the blobstore contents. This can be an absolute path to anywhere on the system nxrm has access to or it can\nbe a path relative to the sonatype-work directory\n"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreFileSoftQuota:NexusBlobstoreFileSoftQuota",
                        "description": "Soft quota of the blobstore\n"
                    },
                    "totalSizeInBytes": {
                        "type": "integer",
                        "description": "The total size of the blobstore in Bytes\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusBlobstoreGroup:NexusBlobstoreGroup": {
            "properties": {
                "availableSpaceInBytes": {
                    "type": "integer",
                    "description": "Available space in Bytes\n"
                },
                "blobCount": {
                    "type": "integer",
                    "description": "Count of blobs\n"
                },
                "fillPolicy": {
                    "type": "string",
                    "description": "The policy how to fill the members. Possible values: `roundRobin` or `writeToFirst`\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the names of blob stores that are members of this group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreGroupSoftQuota:NexusBlobstoreGroupSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "totalSizeInBytes": {
                    "type": "integer",
                    "description": "The total size of the blobstore in Bytes\n"
                }
            },
            "required": [
                "availableSpaceInBytes",
                "blobCount",
                "fillPolicy",
                "members",
                "name",
                "totalSizeInBytes"
            ],
            "inputProperties": {
                "fillPolicy": {
                    "type": "string",
                    "description": "The policy how to fill the members. Possible values: `roundRobin` or `writeToFirst`\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the names of blob stores that are members of this group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreGroupSoftQuota:NexusBlobstoreGroupSoftQuota",
                    "description": "Soft quota of the blobstore\n"
                }
            },
            "requiredInputs": [
                "fillPolicy",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusBlobstoreGroup resources.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "integer",
                        "description": "Available space in Bytes\n"
                    },
                    "blobCount": {
                        "type": "integer",
                        "description": "Count of blobs\n"
                    },
                    "fillPolicy": {
                        "type": "string",
                        "description": "The policy how to fill the members. Possible values: `roundRobin` or `writeToFirst`\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the names of blob stores that are members of this group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Blobstore name\n"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreGroupSoftQuota:NexusBlobstoreGroupSoftQuota",
                        "description": "Soft quota of the blobstore\n"
                    },
                    "totalSizeInBytes": {
                        "type": "integer",
                        "description": "The total size of the blobstore in Bytes\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusBlobstoreS3:NexusBlobstoreS3": {
            "properties": {
                "blobCount": {
                    "type": "integer",
                    "description": "Count of blobs\n"
                },
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfiguration:NexusBlobstoreS3BucketConfiguration",
                    "description": "The S3 bucket configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3SoftQuota:NexusBlobstoreS3SoftQuota",
                    "description": "Soft quota of the blobstore\n"
                },
                "totalSizeInBytes": {
                    "type": "integer",
                    "description": "The total size of the blobstore in Bytes\n"
                }
            },
            "required": [
                "blobCount",
                "bucketConfiguration",
                "name",
                "totalSizeInBytes"
            ],
            "inputProperties": {
                "bucketConfiguration": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfiguration:NexusBlobstoreS3BucketConfiguration",
                    "description": "The S3 bucket configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Blobstore name\n"
                },
                "softQuota": {
                    "$ref": "#/types/nexus:index/NexusBlobstoreS3SoftQuota:NexusBlobstoreS3SoftQuota",
                    "description": "Soft quota of the blobstore\n"
                }
            },
            "requiredInputs": [
                "bucketConfiguration"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusBlobstoreS3 resources.\n",
                "properties": {
                    "blobCount": {
                        "type": "integer",
                        "description": "Count of blobs\n"
                    },
                    "bucketConfiguration": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreS3BucketConfiguration:NexusBlobstoreS3BucketConfiguration",
                        "description": "The S3 bucket configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Blobstore name\n"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/NexusBlobstoreS3SoftQuota:NexusBlobstoreS3SoftQuota",
                        "description": "Soft quota of the blobstore\n"
                    },
                    "totalSizeInBytes": {
                        "type": "integer",
                        "description": "The total size of the blobstore in Bytes\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusContentSelector:NexusContentSelector": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the content selector\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The content selector expression\n"
                },
                "name": {
                    "type": "string",
                    "description": "Content selector name\n"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the content selector\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The content selector expression\n"
                },
                "name": {
                    "type": "string",
                    "description": "Content selector name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusContentSelector resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the content selector\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The content selector expression\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Content selector name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusPrivilege:NexusPrivilege": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions for the privilege (browse, read, edit, add, delete, all and run)\n"
                },
                "contentSelector": {
                    "type": "string",
                    "description": "The content selector for the privilege\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the privilege\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the privilege\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,\n`npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the privilege\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The wildcard privilege pattern\n"
                },
                "repository": {
                    "type": "string",
                    "description": "The repository of the privilege\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "The script name related to the privilege\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,\n`repository-view`, `script`, `wildcard`\n"
                }
            },
            "required": [
                "actions",
                "name",
                "type"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions for the privilege (browse, read, edit, add, delete, all and run)\n"
                },
                "contentSelector": {
                    "type": "string",
                    "description": "The content selector for the privilege\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the privilege\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the privilege\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,\n`npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the privilege\n",
                    "willReplaceOnChanges": true
                },
                "pattern": {
                    "type": "string",
                    "description": "The wildcard privilege pattern\n"
                },
                "repository": {
                    "type": "string",
                    "description": "The repository of the privilege\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "The script name related to the privilege\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,\n`repository-view`, `script`, `wildcard`\n"
                }
            },
            "requiredInputs": [
                "actions",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusPrivilege resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Actions for the privilege (browse, read, edit, add, delete, all and run)\n"
                    },
                    "contentSelector": {
                        "type": "string",
                        "description": "The content selector for the privilege\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the privilege\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain of the privilege\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,\n`npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the privilege\n",
                        "willReplaceOnChanges": true
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The wildcard privilege pattern\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "The repository of the privilege\n"
                    },
                    "scriptName": {
                        "type": "string",
                        "description": "The script name related to the privilege\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,\n`repository-view`, `script`, `wildcard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepository:NexusRepository": {
            "properties": {
                "aptSignings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptSigning:NexusRepositoryAptSigning"
                    },
                    "description": "Apt signing configuration for the repository\n"
                },
                "apts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryApt:NexusRepositoryApt"
                    },
                    "description": "Apt specific configuration of the repository\n"
                },
                "bowers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryBower:NexusRepositoryBower"
                    },
                    "description": "Bower specific configuration of the repository\n"
                },
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryCleanup:NexusRepositoryCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "dockerProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxy:NexusRepositoryDockerProxy",
                    "description": "Configuration for docker proxy repository\n"
                },
                "dockers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDocker:NexusRepositoryDocker"
                    },
                    "description": "Docker specific configuration of the repository\n"
                },
                "format": {
                    "type": "string",
                    "description": "Repository format. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`, `npm`, `nuget`,\n`p2`, `pypi`, `raw`, `rubygems`, `yum`\n"
                },
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryGroup:NexusRepositoryGroup",
                    "description": "Configuration for repository group\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryHttpClient:NexusRepositoryHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories.\n"
                },
                "maven": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMaven:NexusRepositoryMaven",
                    "description": "Maven specific configuration of the repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryNegativeCache:NexusRepositoryNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "nugetProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryNugetProxy:NexusRepositoryNugetProxy",
                    "description": "Configuration for the nuget proxy repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryProxy:NexusRepositoryProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryStorage:NexusRepositoryStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "type": {
                    "type": "string",
                    "description": "Repository type. Possible values: `group`, `hosted`, `proxy`\n"
                },
                "yums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYum:NexusRepositoryYum"
                    },
                    "description": "Yum specific configuration of the repository\n"
                }
            },
            "required": [
                "format",
                "name",
                "type"
            ],
            "inputProperties": {
                "aptSignings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptSigning:NexusRepositoryAptSigning"
                    },
                    "description": "Apt signing configuration for the repository\n"
                },
                "apts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryApt:NexusRepositoryApt"
                    },
                    "description": "Apt specific configuration of the repository\n"
                },
                "bowers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryBower:NexusRepositoryBower"
                    },
                    "description": "Bower specific configuration of the repository\n"
                },
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryCleanup:NexusRepositoryCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "dockerProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxy:NexusRepositoryDockerProxy",
                    "description": "Configuration for docker proxy repository\n"
                },
                "dockers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDocker:NexusRepositoryDocker"
                    },
                    "description": "Docker specific configuration of the repository\n"
                },
                "format": {
                    "type": "string",
                    "description": "Repository format. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`, `npm`, `nuget`,\n`p2`, `pypi`, `raw`, `rubygems`, `yum`\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryGroup:NexusRepositoryGroup",
                    "description": "Configuration for repository group\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryHttpClient:NexusRepositoryHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories.\n"
                },
                "maven": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMaven:NexusRepositoryMaven",
                    "description": "Maven specific configuration of the repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryNegativeCache:NexusRepositoryNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "nugetProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryNugetProxy:NexusRepositoryNugetProxy",
                    "description": "Configuration for the nuget proxy repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryProxy:NexusRepositoryProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryStorage:NexusRepositoryStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "type": {
                    "type": "string",
                    "description": "Repository type. Possible values: `group`, `hosted`, `proxy`\n",
                    "willReplaceOnChanges": true
                },
                "yums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYum:NexusRepositoryYum"
                    },
                    "description": "Yum specific configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "format",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepository resources.\n",
                "properties": {
                    "aptSignings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryAptSigning:NexusRepositoryAptSigning"
                        },
                        "description": "Apt signing configuration for the repository\n"
                    },
                    "apts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryApt:NexusRepositoryApt"
                        },
                        "description": "Apt specific configuration of the repository\n"
                    },
                    "bowers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryBower:NexusRepositoryBower"
                        },
                        "description": "Bower specific configuration of the repository\n"
                    },
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryCleanup:NexusRepositoryCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "dockerProxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxy:NexusRepositoryDockerProxy",
                        "description": "Configuration for docker proxy repository\n"
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryDocker:NexusRepositoryDocker"
                        },
                        "description": "Docker specific configuration of the repository\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "Repository format. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`, `npm`, `nuget`,\n`p2`, `pypi`, `raw`, `rubygems`, `yum`\n",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "$ref": "#/types/nexus:index/NexusRepositoryGroup:NexusRepositoryGroup",
                        "description": "Configuration for repository group\n"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/NexusRepositoryHttpClient:NexusRepositoryHttpClient",
                        "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories.\n"
                    },
                    "maven": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMaven:NexusRepositoryMaven",
                        "description": "Maven specific configuration of the repository\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/NexusRepositoryNegativeCache:NexusRepositoryNegativeCache",
                        "description": "Configuration of the negative cache handling\n"
                    },
                    "nugetProxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryNugetProxy:NexusRepositoryNugetProxy",
                        "description": "Configuration for the nuget proxy repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryProxy:NexusRepositoryProxy",
                        "description": "Configuration for the proxy repository\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryStorage:NexusRepositoryStorage",
                        "description": "The storage configuration of the repository\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Repository type. Possible values: `group`, `hosted`, `proxy`\n",
                        "willReplaceOnChanges": true
                    },
                    "yums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryYum:NexusRepositoryYum"
                        },
                        "description": "Yum specific configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryAptHosted:NexusRepositoryAptHosted": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptHostedCleanup:NexusRepositoryAptHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedComponent:NexusRepositoryAptHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "Distribution to fetch\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "signing": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedSigning:NexusRepositoryAptHostedSigning",
                    "description": "Signing contains signing data of hosted repositores of format Apt\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedStorage:NexusRepositoryAptHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "component",
                "distribution",
                "name",
                "signing",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptHostedCleanup:NexusRepositoryAptHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedComponent:NexusRepositoryAptHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "Distribution to fetch\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "signing": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedSigning:NexusRepositoryAptHostedSigning",
                    "description": "Signing contains signing data of hosted repositores of format Apt\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptHostedStorage:NexusRepositoryAptHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "distribution",
                "signing",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryAptHosted resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryAptHostedCleanup:NexusRepositoryAptHostedCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "component": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptHostedComponent:NexusRepositoryAptHostedComponent",
                        "description": "Component configuration for the hosted repository\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Distribution to fetch\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "signing": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptHostedSigning:NexusRepositoryAptHostedSigning",
                        "description": "Signing contains signing data of hosted repositores of format Apt\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptHostedStorage:NexusRepositoryAptHostedStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryAptProxy:NexusRepositoryAptProxy": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyCleanup:NexusRepositoryAptProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "Distribution to fetch\n"
                },
                "flat": {
                    "type": "boolean",
                    "description": "Distribution to fetch\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyHttpClient:NexusRepositoryAptProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyNegativeCache:NexusRepositoryAptProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyProxy:NexusRepositoryAptProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyStorage:NexusRepositoryAptProxyStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "distribution",
                "flat",
                "name",
                "proxy",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyCleanup:NexusRepositoryAptProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "Distribution to fetch\n"
                },
                "flat": {
                    "type": "boolean",
                    "description": "Distribution to fetch\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyHttpClient:NexusRepositoryAptProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyNegativeCache:NexusRepositoryAptProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyProxy:NexusRepositoryAptProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryAptProxyStorage:NexusRepositoryAptProxyStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "distribution",
                "flat",
                "proxy",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryAptProxy resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryAptProxyCleanup:NexusRepositoryAptProxyCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Distribution to fetch\n"
                    },
                    "flat": {
                        "type": "boolean",
                        "description": "Distribution to fetch\n"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyHttpClient:NexusRepositoryAptProxyHttpClient",
                        "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyNegativeCache:NexusRepositoryAptProxyNegativeCache",
                        "description": "Configuration of the negative cache handling\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyProxy:NexusRepositoryAptProxyProxy",
                        "description": "Configuration for the proxy repository\n"
                    },
                    "routingRule": {
                        "type": "string",
                        "description": "The name of the routing rule assigned to this repository\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryAptProxyStorage:NexusRepositoryAptProxyStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryDockerGroup:NexusRepositoryDockerGroup": {
            "properties": {
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupDocker:NexusRepositoryDockerGroupDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupGroup:NexusRepositoryDockerGroupGroup",
                    "description": "Configuration for repository group\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupStorage:NexusRepositoryDockerGroupStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "docker",
                "group",
                "name",
                "storage"
            ],
            "inputProperties": {
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupDocker:NexusRepositoryDockerGroupDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupGroup:NexusRepositoryDockerGroupGroup",
                    "description": "Configuration for repository group\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupStorage:NexusRepositoryDockerGroupStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "docker",
                "group",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryDockerGroup resources.\n",
                "properties": {
                    "docker": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupDocker:NexusRepositoryDockerGroupDocker",
                        "description": "docker contains the configuration of the docker repository\n"
                    },
                    "group": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupGroup:NexusRepositoryDockerGroupGroup",
                        "description": "Configuration for repository group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerGroupStorage:NexusRepositoryDockerGroupStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryDockerHosted:NexusRepositoryDockerHosted": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedCleanup:NexusRepositoryDockerHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedComponent:NexusRepositoryDockerHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedDocker:NexusRepositoryDockerHostedDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedStorage:NexusRepositoryDockerHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "component",
                "docker",
                "name",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedCleanup:NexusRepositoryDockerHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedComponent:NexusRepositoryDockerHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedDocker:NexusRepositoryDockerHostedDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedStorage:NexusRepositoryDockerHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "docker",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryDockerHosted resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedCleanup:NexusRepositoryDockerHostedCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "component": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedComponent:NexusRepositoryDockerHostedComponent",
                        "description": "Component configuration for the hosted repository\n"
                    },
                    "docker": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedDocker:NexusRepositoryDockerHostedDocker",
                        "description": "docker contains the configuration of the docker repository\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerHostedStorage:NexusRepositoryDockerHostedStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryDockerProxy:NexusRepositoryDockerProxy": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyCleanup:NexusRepositoryDockerProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDocker:NexusRepositoryDockerProxyDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "dockerProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDockerProxy:NexusRepositoryDockerProxyDockerProxy",
                    "description": "docker_proxy contains the configuration of the docker index\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyHttpClient:NexusRepositoryDockerProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyNegativeCache:NexusRepositoryDockerProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyProxy:NexusRepositoryDockerProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyStorage:NexusRepositoryDockerProxyStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "docker",
                "dockerProxy",
                "name",
                "proxy",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyCleanup:NexusRepositoryDockerProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "docker": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDocker:NexusRepositoryDockerProxyDocker",
                    "description": "docker contains the configuration of the docker repository\n"
                },
                "dockerProxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDockerProxy:NexusRepositoryDockerProxyDockerProxy",
                    "description": "docker_proxy contains the configuration of the docker index\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyHttpClient:NexusRepositoryDockerProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyNegativeCache:NexusRepositoryDockerProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyProxy:NexusRepositoryDockerProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyStorage:NexusRepositoryDockerProxyStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "docker",
                "dockerProxy",
                "proxy",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryDockerProxy resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyCleanup:NexusRepositoryDockerProxyCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "docker": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDocker:NexusRepositoryDockerProxyDocker",
                        "description": "docker contains the configuration of the docker repository\n"
                    },
                    "dockerProxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyDockerProxy:NexusRepositoryDockerProxyDockerProxy",
                        "description": "docker_proxy contains the configuration of the docker index\n"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyHttpClient:NexusRepositoryDockerProxyHttpClient",
                        "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyNegativeCache:NexusRepositoryDockerProxyNegativeCache",
                        "description": "Configuration of the negative cache handling\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyProxy:NexusRepositoryDockerProxyProxy",
                        "description": "Configuration for the proxy repository\n"
                    },
                    "routingRule": {
                        "type": "string",
                        "description": "The name of the routing rule assigned to this repository\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryDockerProxyStorage:NexusRepositoryDockerProxyStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryMavenHosted:NexusRepositoryMavenHosted": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedCleanup:NexusRepositoryMavenHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedComponent:NexusRepositoryMavenHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "maven": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedMaven:NexusRepositoryMavenHostedMaven",
                    "description": "Maven contains additional data of maven repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedStorage:NexusRepositoryMavenHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "component",
                "maven",
                "name",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedCleanup:NexusRepositoryMavenHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedComponent:NexusRepositoryMavenHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "maven": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedMaven:NexusRepositoryMavenHostedMaven",
                    "description": "Maven contains additional data of maven repository\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedStorage:NexusRepositoryMavenHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "maven",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryMavenHosted resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedCleanup:NexusRepositoryMavenHostedCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "component": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedComponent:NexusRepositoryMavenHostedComponent",
                        "description": "Component configuration for the hosted repository\n"
                    },
                    "maven": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedMaven:NexusRepositoryMavenHostedMaven",
                        "description": "Maven contains additional data of maven repository\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryMavenHostedStorage:NexusRepositoryMavenHostedStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryYumGroup:NexusRepositoryYumGroup": {
            "properties": {
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupGroup:NexusRepositoryYumGroupGroup",
                    "description": "Configuration for repository group\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupStorage:NexusRepositoryYumGroupStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "yumSigning": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupYumSigning:NexusRepositoryYumGroupYumSigning",
                    "description": "Contains signing data of repositores\n"
                }
            },
            "required": [
                "group",
                "name",
                "storage"
            ],
            "inputProperties": {
                "group": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupGroup:NexusRepositoryYumGroupGroup",
                    "description": "Configuration for repository group\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupStorage:NexusRepositoryYumGroupStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "yumSigning": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumGroupYumSigning:NexusRepositoryYumGroupYumSigning",
                    "description": "Contains signing data of repositores\n"
                }
            },
            "requiredInputs": [
                "group",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryYumGroup resources.\n",
                "properties": {
                    "group": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumGroupGroup:NexusRepositoryYumGroupGroup",
                        "description": "Configuration for repository group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumGroupStorage:NexusRepositoryYumGroupStorage",
                        "description": "The storage configuration of the repository\n"
                    },
                    "yumSigning": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumGroupYumSigning:NexusRepositoryYumGroupYumSigning",
                        "description": "Contains signing data of repositores\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryYumHosted:NexusRepositoryYumHosted": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumHostedCleanup:NexusRepositoryYumHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumHostedComponent:NexusRepositoryYumHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "deployPolicy": {
                    "type": "string",
                    "description": "Validate that all paths are RPMs or yum metadata. Possible values: `STRICT` or `PERMISSIVE`\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "repodataDepth": {
                    "type": "integer",
                    "description": "Specifies the repository depth where repodata folder(s) are created. Possible values: 0-5\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumHostedStorage:NexusRepositoryYumHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "required": [
                "component",
                "name",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumHostedCleanup:NexusRepositoryYumHostedCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "component": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumHostedComponent:NexusRepositoryYumHostedComponent",
                    "description": "Component configuration for the hosted repository\n"
                },
                "deployPolicy": {
                    "type": "string",
                    "description": "Validate that all paths are RPMs or yum metadata. Possible values: `STRICT` or `PERMISSIVE`\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "repodataDepth": {
                    "type": "integer",
                    "description": "Specifies the repository depth where repodata folder(s) are created. Possible values: 0-5\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumHostedStorage:NexusRepositoryYumHostedStorage",
                    "description": "The storage configuration of the repository\n"
                }
            },
            "requiredInputs": [
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryYumHosted resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryYumHostedCleanup:NexusRepositoryYumHostedCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "component": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumHostedComponent:NexusRepositoryYumHostedComponent",
                        "description": "Component configuration for the hosted repository\n"
                    },
                    "deployPolicy": {
                        "type": "string",
                        "description": "Validate that all paths are RPMs or yum metadata. Possible values: `STRICT` or `PERMISSIVE`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "repodataDepth": {
                        "type": "integer",
                        "description": "Specifies the repository depth where repodata folder(s) are created. Possible values: 0-5\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumHostedStorage:NexusRepositoryYumHostedStorage",
                        "description": "The storage configuration of the repository\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRepositoryYumProxy:NexusRepositoryYumProxy": {
            "properties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyCleanup:NexusRepositoryYumProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyHttpClient:NexusRepositoryYumProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyNegativeCache:NexusRepositoryYumProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyProxy:NexusRepositoryYumProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyStorage:NexusRepositoryYumProxyStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "yumSigning": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyYumSigning:NexusRepositoryYumProxyYumSigning",
                    "description": "Contains signing data of repositores\n"
                }
            },
            "required": [
                "name",
                "proxy",
                "storage"
            ],
            "inputProperties": {
                "cleanups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyCleanup:NexusRepositoryYumProxyCleanup"
                    },
                    "description": "Cleanup policies\n"
                },
                "httpClient": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyHttpClient:NexusRepositoryYumProxyHttpClient",
                    "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for this repository\n"
                },
                "negativeCache": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyNegativeCache:NexusRepositoryYumProxyNegativeCache",
                    "description": "Configuration of the negative cache handling\n"
                },
                "online": {
                    "type": "boolean",
                    "description": "Whether this repository accepts incoming requests\n"
                },
                "proxy": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyProxy:NexusRepositoryYumProxyProxy",
                    "description": "Configuration for the proxy repository\n"
                },
                "routingRule": {
                    "type": "string",
                    "description": "The name of the routing rule assigned to this repository\n"
                },
                "storage": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyStorage:NexusRepositoryYumProxyStorage",
                    "description": "The storage configuration of the repository\n"
                },
                "yumSigning": {
                    "$ref": "#/types/nexus:index/NexusRepositoryYumProxyYumSigning:NexusRepositoryYumProxyYumSigning",
                    "description": "Contains signing data of repositores\n"
                }
            },
            "requiredInputs": [
                "proxy",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRepositoryYumProxy resources.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/NexusRepositoryYumProxyCleanup:NexusRepositoryYumProxyCleanup"
                        },
                        "description": "Cleanup policies\n"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyHttpClient:NexusRepositoryYumProxyHttpClient",
                        "description": "HTTP Client configuration for proxy repositories. Required for docker proxy repositories\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique identifier for this repository\n"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyNegativeCache:NexusRepositoryYumProxyNegativeCache",
                        "description": "Configuration of the negative cache handling\n"
                    },
                    "online": {
                        "type": "boolean",
                        "description": "Whether this repository accepts incoming requests\n"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyProxy:NexusRepositoryYumProxyProxy",
                        "description": "Configuration for the proxy repository\n"
                    },
                    "routingRule": {
                        "type": "string",
                        "description": "The name of the routing rule assigned to this repository\n"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyStorage:NexusRepositoryYumProxyStorage",
                        "description": "The storage configuration of the repository\n"
                    },
                    "yumSigning": {
                        "$ref": "#/types/nexus:index/NexusRepositoryYumProxyYumSigning:NexusRepositoryYumProxyYumSigning",
                        "description": "Contains signing data of repositores\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRole:NexusRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The privileges of this role.\n"
                },
                "roleid": {
                    "type": "string",
                    "description": "The id of the role.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of this role.\n"
                }
            },
            "required": [
                "name",
                "roleid"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The privileges of this role.\n"
                },
                "roleid": {
                    "type": "string",
                    "description": "The id of the role.\n",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of this role.\n"
                }
            },
            "requiredInputs": [
                "roleid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this role.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "privileges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The privileges of this role.\n"
                    },
                    "roleid": {
                        "type": "string",
                        "description": "The id of the role.\n",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The roles of this role.\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusRoutingRule:NexusRoutingRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the routing rule\n"
                },
                "matchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above\nmode)\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the routing rule\n"
                }
            },
            "required": [
                "matchers",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the routing rule\n"
                },
                "matchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above\nmode)\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the routing rule\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "matchers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusRoutingRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the routing rule\n"
                    },
                    "matchers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above\nmode)\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the routing rule\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusScript:NexusScript": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The content of this script.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the script.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the script. Default: `groovy`\n"
                }
            },
            "required": [
                "content",
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The content of this script.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the script.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the script. Default: `groovy`\n"
                }
            },
            "requiredInputs": [
                "content"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusScript resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The content of this script.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the script.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the script. Default: `groovy`\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityAnonymous:NexusSecurityAnonymous": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the anonymous access to the repository manager. Default: false\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                }
            },
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the anonymous access to the repository manager. Default: false\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityAnonymous resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Activate the anonymous access to the repository manager. Default: false\n"
                    },
                    "realmName": {
                        "type": "string",
                        "description": "The name of the used realm. Default: \"NexusAuthorizingRealm\"\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user id used by anonymous access. Default: \"anonymous\"\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityContentSelector:NexusSecurityContentSelector": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the content selector\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The content selector expression\n"
                },
                "name": {
                    "type": "string",
                    "description": "Content selector name\n"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the content selector\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The content selector expression\n"
                },
                "name": {
                    "type": "string",
                    "description": "Content selector name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityContentSelector resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the content selector\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The content selector expression\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Content selector name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityLdap:NexusSecurityLdap": {
            "properties": {
                "authPassword": {
                    "type": "string",
                    "description": "The password to bind with. Required if authScheme other than none.\n"
                },
                "authRealm": {
                    "type": "string",
                    "description": "The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5\n"
                },
                "authSchema": {
                    "type": "string",
                    "description": "Authentication scheme used for connecting to LDAP server\n"
                },
                "authUsername": {
                    "type": "string",
                    "description": "This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.\n"
                },
                "connectionRetryDelaySeconds": {
                    "type": "integer",
                    "description": "How long to wait before retrying\n"
                },
                "connectionTimeoutSeconds": {
                    "type": "integer",
                    "description": "How long to wait before timeout\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to\nform the full Group search base DN.\n"
                },
                "groupIdAttribute": {
                    "type": "string",
                    "description": "This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "LDAP attribute containing the usernames for the group. Required if groupType is static\n"
                },
                "groupMemberFormat": {
                    "type": "string",
                    "description": "The format of user ID stored in the group member attribute. Required if groupType is static\n"
                },
                "groupObjectClass": {
                    "type": "string",
                    "description": "LDAP class for group objects. Required if groupType is static\n"
                },
                "groupSubtree": {
                    "type": "boolean",
                    "description": "Are groups located in structures below the group base DN\n"
                },
                "groupType": {
                    "type": "string",
                    "description": "Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups).\nRequired if ldapGroupsAsRoles is true.\n"
                },
                "host": {
                    "type": "string",
                    "description": "LDAP server connection hostname\n"
                },
                "ldapGroupsAsRoles": {
                    "type": "boolean",
                    "description": "Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles\n"
                },
                "maxIncidentCount": {
                    "type": "integer",
                    "description": "How many retry attempts\n"
                },
                "name": {
                    "type": "string",
                    "description": "LDAP server name\n"
                },
                "port": {
                    "type": "integer",
                    "description": "LDAP server connection port to use\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "LDAP server connection Protocol to use\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "LDAP location to be added to the connection URL\n"
                },
                "useTrustStore": {
                    "type": "boolean",
                    "description": "Whether to use certificates stored in Nexus Repository Manager's truststore\n"
                },
                "userBaseDn": {
                    "type": "string",
                    "description": "The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to\nform the full User search base DN.\n"
                },
                "userEmailAddressAttribute": {
                    "type": "string",
                    "description": "This is used to find an email address given the user ID\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "This is used to find a user given its user ID\n"
                },
                "userLdapFilter": {
                    "type": "string",
                    "description": "LDAP search filter to limit user search\n"
                },
                "userMemberOfAttribute": {
                    "type": "string",
                    "description": "Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is\ndynamic\n"
                },
                "userObjectClass": {
                    "type": "string",
                    "description": "LDAP class for user objects\n"
                },
                "userPasswordAttribute": {
                    "type": "string",
                    "description": "If this field is blank the user will be authenticated against a bind with the LDAP server\n"
                },
                "userRealNameAttribute": {
                    "type": "string",
                    "description": "This is used to find a real name given the user ID\n"
                },
                "userSubtree": {
                    "type": "boolean",
                    "description": "Are users located in structures below the user base DN?\n"
                }
            },
            "required": [
                "authSchema",
                "authUsername",
                "connectionRetryDelaySeconds",
                "connectionTimeoutSeconds",
                "groupType",
                "host",
                "maxIncidentCount",
                "name",
                "port",
                "protocol",
                "searchBase"
            ],
            "inputProperties": {
                "authPassword": {
                    "type": "string",
                    "description": "The password to bind with. Required if authScheme other than none.\n"
                },
                "authRealm": {
                    "type": "string",
                    "description": "The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5\n"
                },
                "authSchema": {
                    "type": "string",
                    "description": "Authentication scheme used for connecting to LDAP server\n"
                },
                "authUsername": {
                    "type": "string",
                    "description": "This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.\n"
                },
                "connectionRetryDelaySeconds": {
                    "type": "integer",
                    "description": "How long to wait before retrying\n"
                },
                "connectionTimeoutSeconds": {
                    "type": "integer",
                    "description": "How long to wait before timeout\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to\nform the full Group search base DN.\n"
                },
                "groupIdAttribute": {
                    "type": "string",
                    "description": "This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "LDAP attribute containing the usernames for the group. Required if groupType is static\n"
                },
                "groupMemberFormat": {
                    "type": "string",
                    "description": "The format of user ID stored in the group member attribute. Required if groupType is static\n"
                },
                "groupObjectClass": {
                    "type": "string",
                    "description": "LDAP class for group objects. Required if groupType is static\n"
                },
                "groupSubtree": {
                    "type": "boolean",
                    "description": "Are groups located in structures below the group base DN\n"
                },
                "groupType": {
                    "type": "string",
                    "description": "Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups).\nRequired if ldapGroupsAsRoles is true.\n"
                },
                "host": {
                    "type": "string",
                    "description": "LDAP server connection hostname\n"
                },
                "ldapGroupsAsRoles": {
                    "type": "boolean",
                    "description": "Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles\n"
                },
                "maxIncidentCount": {
                    "type": "integer",
                    "description": "How many retry attempts\n"
                },
                "name": {
                    "type": "string",
                    "description": "LDAP server name\n"
                },
                "port": {
                    "type": "integer",
                    "description": "LDAP server connection port to use\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "LDAP server connection Protocol to use\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "LDAP location to be added to the connection URL\n"
                },
                "useTrustStore": {
                    "type": "boolean",
                    "description": "Whether to use certificates stored in Nexus Repository Manager's truststore\n"
                },
                "userBaseDn": {
                    "type": "string",
                    "description": "The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to\nform the full User search base DN.\n"
                },
                "userEmailAddressAttribute": {
                    "type": "string",
                    "description": "This is used to find an email address given the user ID\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "This is used to find a user given its user ID\n"
                },
                "userLdapFilter": {
                    "type": "string",
                    "description": "LDAP search filter to limit user search\n"
                },
                "userMemberOfAttribute": {
                    "type": "string",
                    "description": "Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is\ndynamic\n"
                },
                "userObjectClass": {
                    "type": "string",
                    "description": "LDAP class for user objects\n"
                },
                "userPasswordAttribute": {
                    "type": "string",
                    "description": "If this field is blank the user will be authenticated against a bind with the LDAP server\n"
                },
                "userRealNameAttribute": {
                    "type": "string",
                    "description": "This is used to find a real name given the user ID\n"
                },
                "userSubtree": {
                    "type": "boolean",
                    "description": "Are users located in structures below the user base DN?\n"
                }
            },
            "requiredInputs": [
                "authSchema",
                "authUsername",
                "connectionRetryDelaySeconds",
                "connectionTimeoutSeconds",
                "groupType",
                "host",
                "maxIncidentCount",
                "port",
                "protocol",
                "searchBase"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityLdap resources.\n",
                "properties": {
                    "authPassword": {
                        "type": "string",
                        "description": "The password to bind with. Required if authScheme other than none.\n"
                    },
                    "authRealm": {
                        "type": "string",
                        "description": "The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5\n"
                    },
                    "authSchema": {
                        "type": "string",
                        "description": "Authentication scheme used for connecting to LDAP server\n"
                    },
                    "authUsername": {
                        "type": "string",
                        "description": "This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.\n"
                    },
                    "connectionRetryDelaySeconds": {
                        "type": "integer",
                        "description": "How long to wait before retrying\n"
                    },
                    "connectionTimeoutSeconds": {
                        "type": "integer",
                        "description": "How long to wait before timeout\n"
                    },
                    "groupBaseDn": {
                        "type": "string",
                        "description": "The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to\nform the full Group search base DN.\n"
                    },
                    "groupIdAttribute": {
                        "type": "string",
                        "description": "This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static\n"
                    },
                    "groupMemberAttribute": {
                        "type": "string",
                        "description": "LDAP attribute containing the usernames for the group. Required if groupType is static\n"
                    },
                    "groupMemberFormat": {
                        "type": "string",
                        "description": "The format of user ID stored in the group member attribute. Required if groupType is static\n"
                    },
                    "groupObjectClass": {
                        "type": "string",
                        "description": "LDAP class for group objects. Required if groupType is static\n"
                    },
                    "groupSubtree": {
                        "type": "boolean",
                        "description": "Are groups located in structures below the group base DN\n"
                    },
                    "groupType": {
                        "type": "string",
                        "description": "Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups).\nRequired if ldapGroupsAsRoles is true.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "LDAP server connection hostname\n"
                    },
                    "ldapGroupsAsRoles": {
                        "type": "boolean",
                        "description": "Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles\n"
                    },
                    "maxIncidentCount": {
                        "type": "integer",
                        "description": "How many retry attempts\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "LDAP server name\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "LDAP server connection port to use\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "LDAP server connection Protocol to use\n"
                    },
                    "searchBase": {
                        "type": "string",
                        "description": "LDAP location to be added to the connection URL\n"
                    },
                    "useTrustStore": {
                        "type": "boolean",
                        "description": "Whether to use certificates stored in Nexus Repository Manager's truststore\n"
                    },
                    "userBaseDn": {
                        "type": "string",
                        "description": "The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to\nform the full User search base DN.\n"
                    },
                    "userEmailAddressAttribute": {
                        "type": "string",
                        "description": "This is used to find an email address given the user ID\n"
                    },
                    "userIdAttribute": {
                        "type": "string",
                        "description": "This is used to find a user given its user ID\n"
                    },
                    "userLdapFilter": {
                        "type": "string",
                        "description": "LDAP search filter to limit user search\n"
                    },
                    "userMemberOfAttribute": {
                        "type": "string",
                        "description": "Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is\ndynamic\n"
                    },
                    "userObjectClass": {
                        "type": "string",
                        "description": "LDAP class for user objects\n"
                    },
                    "userPasswordAttribute": {
                        "type": "string",
                        "description": "If this field is blank the user will be authenticated against a bind with the LDAP server\n"
                    },
                    "userRealNameAttribute": {
                        "type": "string",
                        "description": "This is used to find a real name given the user ID\n"
                    },
                    "userSubtree": {
                        "type": "boolean",
                        "description": "Are users located in structures below the user base DN?\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityLdapOrder:NexusSecurityLdapOrder": {
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ordered list of LDAP server\n"
                }
            },
            "required": [
                "orders"
            ],
            "inputProperties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ordered list of LDAP server\n"
                }
            },
            "requiredInputs": [
                "orders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityLdapOrder resources.\n",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ordered list of LDAP server\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityRealms:NexusSecurityRealms": {
            "properties": {
                "actives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The realm IDs\n"
                }
            },
            "required": [
                "actives"
            ],
            "inputProperties": {
                "actives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The realm IDs\n"
                }
            },
            "requiredInputs": [
                "actives"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityRealms resources.\n",
                "properties": {
                    "actives": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The realm IDs\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityRole:NexusSecurityRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The privileges of this role.\n"
                },
                "roleid": {
                    "type": "string",
                    "description": "The id of the role.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of this role.\n"
                }
            },
            "required": [
                "name",
                "roleid"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The privileges of this role.\n"
                },
                "roleid": {
                    "type": "string",
                    "description": "The id of the role.\n",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of this role.\n"
                }
            },
            "requiredInputs": [
                "roleid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this role.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "privileges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The privileges of this role.\n"
                    },
                    "roleid": {
                        "type": "string",
                        "description": "The id of the role.\n",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The roles of this role.\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecuritySaml:NexusSecuritySaml": {
            "properties": {
                "emailAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's email address\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Entity ID URI\n"
                },
                "firstNameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's given name\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's groups\n"
                },
                "idpMetadata": {
                    "type": "string",
                    "description": "SAML Identity Provider Metadata XML\n"
                },
                "lastNameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's family name\n"
                },
                "usernameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for username\n"
                },
                "validateAssertionSignature": {
                    "type": "boolean",
                    "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nassertions.\n"
                },
                "validateResponseSignature": {
                    "type": "boolean",
                    "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nresponse.\n"
                }
            },
            "required": [
                "idpMetadata",
                "usernameAttribute"
            ],
            "inputProperties": {
                "emailAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's email address\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Entity ID URI\n"
                },
                "firstNameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's given name\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's groups\n"
                },
                "idpMetadata": {
                    "type": "string",
                    "description": "SAML Identity Provider Metadata XML\n"
                },
                "lastNameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for user's family name\n"
                },
                "usernameAttribute": {
                    "type": "string",
                    "description": "IdP field mappings for username\n"
                },
                "validateAssertionSignature": {
                    "type": "boolean",
                    "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nassertions.\n"
                },
                "validateResponseSignature": {
                    "type": "boolean",
                    "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nresponse.\n"
                }
            },
            "requiredInputs": [
                "idpMetadata",
                "usernameAttribute"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecuritySaml resources.\n",
                "properties": {
                    "emailAttribute": {
                        "type": "string",
                        "description": "IdP field mappings for user's email address\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Entity ID URI\n"
                    },
                    "firstNameAttribute": {
                        "type": "string",
                        "description": "IdP field mappings for user's given name\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP field mappings for user's groups\n"
                    },
                    "idpMetadata": {
                        "type": "string",
                        "description": "SAML Identity Provider Metadata XML\n"
                    },
                    "lastNameAttribute": {
                        "type": "string",
                        "description": "IdP field mappings for user's family name\n"
                    },
                    "usernameAttribute": {
                        "type": "string",
                        "description": "IdP field mappings for username\n"
                    },
                    "validateAssertionSignature": {
                        "type": "boolean",
                        "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nassertions.\n"
                    },
                    "validateResponseSignature": {
                        "type": "boolean",
                        "description": "By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the\nresponse.\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityUser:NexusSecurityUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address associated with the user.\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles which the user has been assigned within Nexus.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The user's status, e.g. active or disabled.\n"
                },
                "userid": {
                    "type": "string",
                    "description": "The userid which is required for login. This value cannot be changed.\n"
                }
            },
            "required": [
                "email",
                "firstname",
                "lastname",
                "password",
                "userid"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The email address associated with the user.\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles which the user has been assigned within Nexus.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The user's status, e.g. active or disabled.\n"
                },
                "userid": {
                    "type": "string",
                    "description": "The userid which is required for login. This value cannot be changed.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "firstname",
                "lastname",
                "password",
                "userid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address associated with the user.\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user.\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The roles which the user has been assigned within Nexus.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The user's status, e.g. active or disabled.\n"
                    },
                    "userid": {
                        "type": "string",
                        "description": "The userid which is required for login. This value cannot be changed.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusSecurityUserToken:NexusSecurityUserToken": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the feature of user tokens.\n"
                },
                "protectContent": {
                    "type": "boolean",
                    "description": "Require user tokens for repository authentication. This does not effect UI access.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Activate the feature of user tokens.\n"
                },
                "protectContent": {
                    "type": "boolean",
                    "description": "Require user tokens for repository authentication. This does not effect UI access.\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusSecurityUserToken resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Activate the feature of user tokens.\n"
                    },
                    "protectContent": {
                        "type": "boolean",
                        "description": "Require user tokens for repository authentication. This does not effect UI access.\n"
                    }
                },
                "type": "object"
            }
        },
        "nexus:index/nexusUser:NexusUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address associated with the user.\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles which the user has been assigned within Nexus.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The user's status, e.g. active or disabled.\n"
                },
                "userid": {
                    "type": "string",
                    "description": "The userid which is required for login. This value cannot be changed.\n"
                }
            },
            "required": [
                "email",
                "firstname",
                "lastname",
                "password",
                "userid"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The email address associated with the user.\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles which the user has been assigned within Nexus.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The user's status, e.g. active or disabled.\n"
                },
                "userid": {
                    "type": "string",
                    "description": "The userid which is required for login. This value cannot be changed.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "firstname",
                "lastname",
                "password",
                "userid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NexusUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address associated with the user.\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user.\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The roles which the user has been assigned within Nexus.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The user's status, e.g. active or disabled.\n"
                    },
                    "userid": {
                        "type": "string",
                        "description": "The userid which is required for login. This value cannot be changed.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "nexus:index/getNexusAnonymous:GetNexusAnonymous": {
            "outputs": {
                "description": "A collection of values returned by GetNexusAnonymous.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "realmName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "id",
                    "realmName",
                    "userId"
                ]
            }
        },
        "nexus:index/getNexusBlobstore:GetNexusBlobstore": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusBlobstore.\n",
                "properties": {
                    "bucketConfiguration": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfiguration:GetNexusBlobstoreBucketConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreSoftQuota:GetNexusBlobstoreSoftQuota"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusBlobstore.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "integer"
                    },
                    "blobCount": {
                        "type": "integer"
                    },
                    "bucketConfiguration": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreBucketConfiguration:GetNexusBlobstoreBucketConfiguration"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "softQuota": {
                        "$ref": "#/types/nexus:index/GetNexusBlobstoreSoftQuota:GetNexusBlobstoreSoftQuota"
                    },
                    "totalSizeInBytes": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availableSpaceInBytes",
                    "blobCount",
                    "id",
                    "name",
                    "totalSizeInBytes"
                ]
            }
        },
        "nexus:index/getNexusBlobstoreAzure:GetNexusBlobstoreAzure": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusBlobstoreAzure.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusBlobstoreAzure.\n",
                "properties": {
                    "blobCount": {
                        "type": "integer"
                    },
                    "bucketConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreAzureBucketConfiguration:GetNexusBlobstoreAzureBucketConfiguration"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "softQuotas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreAzureSoftQuota:GetNexusBlobstoreAzureSoftQuota"
                        }
                    },
                    "totalSizeInBytes": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "blobCount",
                    "bucketConfigurations",
                    "id",
                    "name",
                    "softQuotas",
                    "totalSizeInBytes"
                ]
            }
        },
        "nexus:index/getNexusBlobstoreFile:GetNexusBlobstoreFile": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusBlobstoreFile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusBlobstoreFile.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "integer"
                    },
                    "blobCount": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "softQuotas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreFileSoftQuota:GetNexusBlobstoreFileSoftQuota"
                        }
                    },
                    "totalSizeInBytes": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "availableSpaceInBytes",
                    "blobCount",
                    "id",
                    "name",
                    "path",
                    "softQuotas",
                    "totalSizeInBytes"
                ]
            }
        },
        "nexus:index/getNexusBlobstoreGroup:GetNexusBlobstoreGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusBlobstoreGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusBlobstoreGroup.\n",
                "properties": {
                    "availableSpaceInBytes": {
                        "type": "integer"
                    },
                    "blobCount": {
                        "type": "integer"
                    },
                    "fillPolicy": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "softQuotas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreGroupSoftQuota:GetNexusBlobstoreGroupSoftQuota"
                        }
                    },
                    "totalSizeInBytes": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "availableSpaceInBytes",
                    "blobCount",
                    "fillPolicy",
                    "id",
                    "members",
                    "name",
                    "softQuotas",
                    "totalSizeInBytes"
                ]
            }
        },
        "nexus:index/getNexusBlobstoreS3:GetNexusBlobstoreS3": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusBlobstoreS3.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusBlobstoreS3.\n",
                "properties": {
                    "blobCount": {
                        "type": "integer"
                    },
                    "bucketConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreS3BucketConfiguration:GetNexusBlobstoreS3BucketConfiguration"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "softQuotas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusBlobstoreS3SoftQuota:GetNexusBlobstoreS3SoftQuota"
                        }
                    },
                    "totalSizeInBytes": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "blobCount",
                    "bucketConfigurations",
                    "id",
                    "name",
                    "softQuotas",
                    "totalSizeInBytes"
                ]
            }
        },
        "nexus:index/getNexusPrivileges:GetNexusPrivileges": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusPrivileges.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "format": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "repository": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusPrivileges.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "format": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privileges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusPrivilegesPrivilege:GetNexusPrivilegesPrivilege"
                        }
                    },
                    "repository": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "privileges"
                ]
            }
        },
        "nexus:index/getNexusRepository:GetNexusRepository": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepository.\n",
                "properties": {
                    "aptSignings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptSigning:GetNexusRepositoryAptSigning"
                        }
                    },
                    "apts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryApt:GetNexusRepositoryApt"
                        }
                    },
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryCleanup:GetNexusRepositoryCleanup"
                        }
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDocker:GetNexusRepositoryDocker"
                        }
                    },
                    "format": {
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryGroup:GetNexusRepositoryGroup"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryHttpClient:GetNexusRepositoryHttpClient"
                    },
                    "maven": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryMaven:GetNexusRepositoryMaven"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryNegativeCache:GetNexusRepositoryNegativeCache"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryProxy:GetNexusRepositoryProxy"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryStorage:GetNexusRepositoryStorage"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepository.\n",
                "properties": {
                    "aptSignings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptSigning:GetNexusRepositoryAptSigning"
                        }
                    },
                    "apts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryApt:GetNexusRepositoryApt"
                        }
                    },
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryCleanup:GetNexusRepositoryCleanup"
                        }
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDocker:GetNexusRepositoryDocker"
                        }
                    },
                    "format": {
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryGroup:GetNexusRepositoryGroup"
                    },
                    "httpClient": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryHttpClient:GetNexusRepositoryHttpClient"
                    },
                    "id": {
                        "type": "string"
                    },
                    "maven": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryMaven:GetNexusRepositoryMaven"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negativeCache": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryNegativeCache:GetNexusRepositoryNegativeCache"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "proxy": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryProxy:GetNexusRepositoryProxy"
                    },
                    "storage": {
                        "$ref": "#/types/nexus:index/GetNexusRepositoryStorage:GetNexusRepositoryStorage"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nexus:index/getNexusRepositoryAptHosted:GetNexusRepositoryAptHosted": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryAptHosted.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryAptHosted.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptHostedCleanup:GetNexusRepositoryAptHostedCleanup"
                        }
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptHostedComponent:GetNexusRepositoryAptHostedComponent"
                        }
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptHostedStorage:GetNexusRepositoryAptHostedStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "components",
                    "distribution",
                    "id",
                    "name",
                    "online",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryAptProxy:GetNexusRepositoryAptProxy": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryAptProxy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryAptProxy.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyCleanup:GetNexusRepositoryAptProxyCleanup"
                        }
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "flat": {
                        "type": "boolean"
                    },
                    "httpClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyHttpClient:GetNexusRepositoryAptProxyHttpClient"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negativeCaches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyNegativeCach:GetNexusRepositoryAptProxyNegativeCach"
                        }
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyProxy:GetNexusRepositoryAptProxyProxy"
                        }
                    },
                    "routingRule": {
                        "type": "string"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryAptProxyStorage:GetNexusRepositoryAptProxyStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "distribution",
                    "flat",
                    "httpClients",
                    "id",
                    "name",
                    "negativeCaches",
                    "online",
                    "proxies",
                    "routingRule",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryDockerGroup:GetNexusRepositoryDockerGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryDockerGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryDockerGroup.\n",
                "properties": {
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerGroupDocker:GetNexusRepositoryDockerGroupDocker"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerGroupGroup:GetNexusRepositoryDockerGroupGroup"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerGroupStorage:GetNexusRepositoryDockerGroupStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "dockers",
                    "groups",
                    "id",
                    "name",
                    "online",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryDockerHosted:GetNexusRepositoryDockerHosted": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryDockerHosted.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryDockerHosted.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerHostedCleanup:GetNexusRepositoryDockerHostedCleanup"
                        }
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerHostedComponent:GetNexusRepositoryDockerHostedComponent"
                        }
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerHostedDocker:GetNexusRepositoryDockerHostedDocker"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerHostedStorage:GetNexusRepositoryDockerHostedStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "components",
                    "dockers",
                    "id",
                    "name",
                    "online",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryDockerProxy:GetNexusRepositoryDockerProxy": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryDockerProxy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryDockerProxy.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyCleanup:GetNexusRepositoryDockerProxyCleanup"
                        }
                    },
                    "dockerProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyDockerProxy:GetNexusRepositoryDockerProxyDockerProxy"
                        }
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyDocker:GetNexusRepositoryDockerProxyDocker"
                        }
                    },
                    "httpClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyHttpClient:GetNexusRepositoryDockerProxyHttpClient"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negativeCaches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyNegativeCach:GetNexusRepositoryDockerProxyNegativeCach"
                        }
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyProxy:GetNexusRepositoryDockerProxyProxy"
                        }
                    },
                    "routingRule": {
                        "type": "string"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryDockerProxyStorage:GetNexusRepositoryDockerProxyStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "dockers",
                    "dockerProxies",
                    "httpClients",
                    "id",
                    "name",
                    "negativeCaches",
                    "online",
                    "proxies",
                    "routingRule",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryList:GetNexusRepositoryList": {
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryList.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryListItem:GetNexusRepositoryListItem"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "items"
                ]
            }
        },
        "nexus:index/getNexusRepositoryYumGroup:GetNexusRepositoryYumGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryYumGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryYumGroup.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumGroupGroup:GetNexusRepositoryYumGroupGroup"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumGroupStorage:GetNexusRepositoryYumGroupStorage"
                        }
                    },
                    "yumSignings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumGroupYumSigning:GetNexusRepositoryYumGroupYumSigning"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id",
                    "name",
                    "online",
                    "storages",
                    "yumSignings"
                ]
            }
        },
        "nexus:index/getNexusRepositoryYumHosted:GetNexusRepositoryYumHosted": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryYumHosted.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryYumHosted.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumHostedCleanup:GetNexusRepositoryYumHostedCleanup"
                        }
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumHostedComponent:GetNexusRepositoryYumHostedComponent"
                        }
                    },
                    "deployPolicy": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "repodataDepth": {
                        "type": "integer"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumHostedStorage:GetNexusRepositoryYumHostedStorage"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "components",
                    "deployPolicy",
                    "id",
                    "name",
                    "online",
                    "repodataDepth",
                    "storages"
                ]
            }
        },
        "nexus:index/getNexusRepositoryYumProxy:GetNexusRepositoryYumProxy": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRepositoryYumProxy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRepositoryYumProxy.\n",
                "properties": {
                    "cleanups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyCleanup:GetNexusRepositoryYumProxyCleanup"
                        }
                    },
                    "httpClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyHttpClient:GetNexusRepositoryYumProxyHttpClient"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "negativeCaches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyNegativeCach:GetNexusRepositoryYumProxyNegativeCach"
                        }
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyProxy:GetNexusRepositoryYumProxyProxy"
                        }
                    },
                    "routingRule": {
                        "type": "string"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyStorage:GetNexusRepositoryYumProxyStorage"
                        }
                    },
                    "yumSignings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusRepositoryYumProxyYumSigning:GetNexusRepositoryYumProxyYumSigning"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cleanups",
                    "httpClients",
                    "id",
                    "name",
                    "negativeCaches",
                    "online",
                    "proxies",
                    "routingRule",
                    "storages",
                    "yumSignings"
                ]
            }
        },
        "nexus:index/getNexusRoutingRule:GetNexusRoutingRule": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusRoutingRule.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusRoutingRule.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "matchers",
                    "mode",
                    "name"
                ]
            }
        },
        "nexus:index/getNexusSecurityAnonymous:GetNexusSecurityAnonymous": {
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityAnonymous.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "realmName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "id",
                    "realmName",
                    "userId"
                ]
            }
        },
        "nexus:index/getNexusSecurityContentSelector:GetNexusSecurityContentSelector": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusSecurityContentSelector.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityContentSelector.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "expression",
                    "id",
                    "name"
                ]
            }
        },
        "nexus:index/getNexusSecurityLdap:GetNexusSecurityLdap": {
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityLdap.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "ldaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusSecurityLdapLdap:GetNexusSecurityLdapLdap"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ldaps"
                ]
            }
        },
        "nexus:index/getNexusSecurityRealms:GetNexusSecurityRealms": {
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityRealms.\n",
                "properties": {
                    "actives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusSecurityRealmsActive:GetNexusSecurityRealmsActive"
                        }
                    },
                    "availables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nexus:index/GetNexusSecurityRealmsAvailable:GetNexusSecurityRealmsAvailable"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "actives",
                    "availables",
                    "id"
                ]
            }
        },
        "nexus:index/getNexusSecurityRole:GetNexusSecurityRole": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusSecurityRole.\n",
                "properties": {
                    "roleid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "roleid"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityRole.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privileges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roleid": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "privileges",
                    "roleid",
                    "roles"
                ]
            }
        },
        "nexus:index/getNexusSecuritySaml:GetNexusSecuritySaml": {
            "outputs": {
                "description": "A collection of values returned by GetNexusSecuritySaml.\n",
                "properties": {
                    "emailAttribute": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "firstNameAttribute": {
                        "type": "string"
                    },
                    "groupsAttribute": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "idpMetadata": {
                        "type": "string"
                    },
                    "lastNameAttribute": {
                        "type": "string"
                    },
                    "usernameAttribute": {
                        "type": "string"
                    },
                    "validateAssertionSignature": {
                        "type": "boolean"
                    },
                    "validateResponseSignature": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "emailAttribute",
                    "entityId",
                    "firstNameAttribute",
                    "groupsAttribute",
                    "id",
                    "idpMetadata",
                    "lastNameAttribute",
                    "usernameAttribute",
                    "validateAssertionSignature",
                    "validateResponseSignature"
                ]
            }
        },
        "nexus:index/getNexusSecurityUser:GetNexusSecurityUser": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusSecurityUser.\n",
                "properties": {
                    "userid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userid"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "userid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "firstname",
                    "id",
                    "lastname",
                    "roles",
                    "status",
                    "userid"
                ]
            }
        },
        "nexus:index/getNexusSecurityUserToken:GetNexusSecurityUserToken": {
            "outputs": {
                "description": "A collection of values returned by GetNexusSecurityUserToken.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "protectContent": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "id",
                    "protectContent"
                ]
            }
        },
        "nexus:index/getNexusUser:GetNexusUser": {
            "inputs": {
                "description": "A collection of arguments for invoking GetNexusUser.\n",
                "properties": {
                    "userid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userid"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by GetNexusUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "userid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "firstname",
                    "id",
                    "lastname",
                    "roles",
                    "status",
                    "userid"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/SimCubeLtd/pulumi-nexus/sdk/go/nexus"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing SonaType Nexus resources.",
            "packageName": "@simcubeltd/pulumi-nexus",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/datadrivers/terraform-provider-nexus)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-nexus` repo](https://github.com/pulumi/pulumi-nexus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`datadrivers/terraform-provider-nexus` repo](https://github.com/datadrivers/terraform-provider-nexus/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "simcubeltd_pulumi_nexus",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/datadrivers/terraform-provider-nexus)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-nexus` repo](https://github.com/pulumi/pulumi-nexus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`datadrivers/terraform-provider-nexus` repo](https://github.com/datadrivers/terraform-provider-nexus/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}