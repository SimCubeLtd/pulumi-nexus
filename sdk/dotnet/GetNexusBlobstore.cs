// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    public static class GetNexusBlobstore
    {
        public static Task<GetNexusBlobstoreResult> InvokeAsync(GetNexusBlobstoreArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNexusBlobstoreResult>("nexus:index/getNexusBlobstore:GetNexusBlobstore", args ?? new GetNexusBlobstoreArgs(), options.WithDefaults());

        public static Output<GetNexusBlobstoreResult> Invoke(GetNexusBlobstoreInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNexusBlobstoreResult>("nexus:index/getNexusBlobstore:GetNexusBlobstore", args ?? new GetNexusBlobstoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNexusBlobstoreArgs : Pulumi.InvokeArgs
    {
        [Input("bucketConfiguration")]
        public Inputs.GetNexusBlobstoreBucketConfigurationArgs? BucketConfiguration { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("path")]
        public string? Path { get; set; }

        [Input("softQuota")]
        public Inputs.GetNexusBlobstoreSoftQuotaArgs? SoftQuota { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetNexusBlobstoreArgs()
        {
        }
    }

    public sealed class GetNexusBlobstoreInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("bucketConfiguration")]
        public Input<Inputs.GetNexusBlobstoreBucketConfigurationInputArgs>? BucketConfiguration { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("softQuota")]
        public Input<Inputs.GetNexusBlobstoreSoftQuotaInputArgs>? SoftQuota { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetNexusBlobstoreInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNexusBlobstoreResult
    {
        public readonly int AvailableSpaceInBytes;
        public readonly int BlobCount;
        public readonly Outputs.GetNexusBlobstoreBucketConfigurationResult? BucketConfiguration;
        public readonly string Id;
        public readonly string Name;
        public readonly string? Path;
        public readonly Outputs.GetNexusBlobstoreSoftQuotaResult? SoftQuota;
        public readonly int TotalSizeInBytes;
        public readonly string? Type;

        [OutputConstructor]
        private GetNexusBlobstoreResult(
            int availableSpaceInBytes,

            int blobCount,

            Outputs.GetNexusBlobstoreBucketConfigurationResult? bucketConfiguration,

            string id,

            string name,

            string? path,

            Outputs.GetNexusBlobstoreSoftQuotaResult? softQuota,

            int totalSizeInBytes,

            string? type)
        {
            AvailableSpaceInBytes = availableSpaceInBytes;
            BlobCount = blobCount;
            BucketConfiguration = bucketConfiguration;
            Id = id;
            Name = name;
            Path = path;
            SoftQuota = softQuota;
            TotalSizeInBytes = totalSizeInBytes;
            Type = type;
        }
    }
}
