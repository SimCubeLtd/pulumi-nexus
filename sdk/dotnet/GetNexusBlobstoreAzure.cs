// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    public static class GetNexusBlobstoreAzure
    {
        public static Task<GetNexusBlobstoreAzureResult> InvokeAsync(GetNexusBlobstoreAzureArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNexusBlobstoreAzureResult>("nexus:index/getNexusBlobstoreAzure:GetNexusBlobstoreAzure", args ?? new GetNexusBlobstoreAzureArgs(), options.WithDefaults());

        public static Output<GetNexusBlobstoreAzureResult> Invoke(GetNexusBlobstoreAzureInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNexusBlobstoreAzureResult>("nexus:index/getNexusBlobstoreAzure:GetNexusBlobstoreAzure", args ?? new GetNexusBlobstoreAzureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNexusBlobstoreAzureArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNexusBlobstoreAzureArgs()
        {
        }
    }

    public sealed class GetNexusBlobstoreAzureInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNexusBlobstoreAzureInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNexusBlobstoreAzureResult
    {
        public readonly int BlobCount;
        public readonly ImmutableArray<Outputs.GetNexusBlobstoreAzureBucketConfigurationResult> BucketConfigurations;
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetNexusBlobstoreAzureSoftQuotaResult> SoftQuotas;
        public readonly int TotalSizeInBytes;

        [OutputConstructor]
        private GetNexusBlobstoreAzureResult(
            int blobCount,

            ImmutableArray<Outputs.GetNexusBlobstoreAzureBucketConfigurationResult> bucketConfigurations,

            string id,

            string name,

            ImmutableArray<Outputs.GetNexusBlobstoreAzureSoftQuotaResult> softQuotas,

            int totalSizeInBytes)
        {
            BlobCount = blobCount;
            BucketConfigurations = bucketConfigurations;
            Id = id;
            Name = name;
            SoftQuotas = softQuotas;
            TotalSizeInBytes = totalSizeInBytes;
        }
    }
}
