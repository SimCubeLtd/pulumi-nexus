// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    public static class GetNexusBlobstoreFile
    {
        public static Task<GetNexusBlobstoreFileResult> InvokeAsync(GetNexusBlobstoreFileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNexusBlobstoreFileResult>("nexus:index/getNexusBlobstoreFile:GetNexusBlobstoreFile", args ?? new GetNexusBlobstoreFileArgs(), options.WithDefaults());

        public static Output<GetNexusBlobstoreFileResult> Invoke(GetNexusBlobstoreFileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNexusBlobstoreFileResult>("nexus:index/getNexusBlobstoreFile:GetNexusBlobstoreFile", args ?? new GetNexusBlobstoreFileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNexusBlobstoreFileArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNexusBlobstoreFileArgs()
        {
        }
    }

    public sealed class GetNexusBlobstoreFileInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNexusBlobstoreFileInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNexusBlobstoreFileResult
    {
        public readonly int AvailableSpaceInBytes;
        public readonly int BlobCount;
        public readonly string Id;
        public readonly string Name;
        public readonly string Path;
        public readonly ImmutableArray<Outputs.GetNexusBlobstoreFileSoftQuotaResult> SoftQuotas;
        public readonly int TotalSizeInBytes;

        [OutputConstructor]
        private GetNexusBlobstoreFileResult(
            int availableSpaceInBytes,

            int blobCount,

            string id,

            string name,

            string path,

            ImmutableArray<Outputs.GetNexusBlobstoreFileSoftQuotaResult> softQuotas,

            int totalSizeInBytes)
        {
            AvailableSpaceInBytes = availableSpaceInBytes;
            BlobCount = blobCount;
            Id = id;
            Name = name;
            Path = path;
            SoftQuotas = softQuotas;
            TotalSizeInBytes = totalSizeInBytes;
        }
    }
}
