// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    [NexusResourceType("nexus:index/nexusPrivilege:NexusPrivilege")]
    public partial class NexusPrivilege : Pulumi.CustomResource
    {
        /// <summary>
        /// Actions for the privilege (browse, read, edit, add, delete, all and run)
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<string>> Actions { get; private set; } = null!;

        /// <summary>
        /// The content selector for the privilege
        /// </summary>
        [Output("contentSelector")]
        public Output<string?> ContentSelector { get; private set; } = null!;

        /// <summary>
        /// A description of the privilege
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The domain of the privilege
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
        /// `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
        /// </summary>
        [Output("format")]
        public Output<string?> Format { get; private set; } = null!;

        /// <summary>
        /// The name of the privilege
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The wildcard privilege pattern
        /// </summary>
        [Output("pattern")]
        public Output<string?> Pattern { get; private set; } = null!;

        /// <summary>
        /// The repository of the privilege
        /// </summary>
        [Output("repository")]
        public Output<string?> Repository { get; private set; } = null!;

        /// <summary>
        /// The script name related to the privilege
        /// </summary>
        [Output("scriptName")]
        public Output<string?> ScriptName { get; private set; } = null!;

        /// <summary>
        /// The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
        /// `repository-view`, `script`, `wildcard`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NexusPrivilege resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NexusPrivilege(string name, NexusPrivilegeArgs args, CustomResourceOptions? options = null)
            : base("nexus:index/nexusPrivilege:NexusPrivilege", name, args ?? new NexusPrivilegeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NexusPrivilege(string name, Input<string> id, NexusPrivilegeState? state = null, CustomResourceOptions? options = null)
            : base("nexus:index/nexusPrivilege:NexusPrivilege", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/SimCubeLtd/pulumi-nexus/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NexusPrivilege resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NexusPrivilege Get(string name, Input<string> id, NexusPrivilegeState? state = null, CustomResourceOptions? options = null)
        {
            return new NexusPrivilege(name, id, state, options);
        }
    }

    public sealed class NexusPrivilegeArgs : Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<string>? _actions;

        /// <summary>
        /// Actions for the privilege (browse, read, edit, add, delete, all and run)
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        /// <summary>
        /// The content selector for the privilege
        /// </summary>
        [Input("contentSelector")]
        public Input<string>? ContentSelector { get; set; }

        /// <summary>
        /// A description of the privilege
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain of the privilege
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
        /// `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// The name of the privilege
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The wildcard privilege pattern
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// The repository of the privilege
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// The script name related to the privilege
        /// </summary>
        [Input("scriptName")]
        public Input<string>? ScriptName { get; set; }

        /// <summary>
        /// The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
        /// `repository-view`, `script`, `wildcard`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public NexusPrivilegeArgs()
        {
        }
    }

    public sealed class NexusPrivilegeState : Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<string>? _actions;

        /// <summary>
        /// Actions for the privilege (browse, read, edit, add, delete, all and run)
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        /// <summary>
        /// The content selector for the privilege
        /// </summary>
        [Input("contentSelector")]
        public Input<string>? ContentSelector { get; set; }

        /// <summary>
        /// A description of the privilege
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain of the privilege
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
        /// `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// The name of the privilege
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The wildcard privilege pattern
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// The repository of the privilege
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// The script name related to the privilege
        /// </summary>
        [Input("scriptName")]
        public Input<string>? ScriptName { get; set; }

        /// <summary>
        /// The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
        /// `repository-view`, `script`, `wildcard`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public NexusPrivilegeState()
        {
        }
    }
}
