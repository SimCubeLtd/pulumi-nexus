// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    [NexusResourceType("nexus:index/nexusRoutingRule:NexusRoutingRule")]
    public partial class NexusRoutingRule : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the routing rule
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above
        /// mode)
        /// </summary>
        [Output("matchers")]
        public Output<ImmutableArray<string>> Matchers { get; private set; } = null!;

        /// <summary>
        /// The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the routing rule
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a NexusRoutingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NexusRoutingRule(string name, NexusRoutingRuleArgs args, CustomResourceOptions? options = null)
            : base("nexus:index/nexusRoutingRule:NexusRoutingRule", name, args ?? new NexusRoutingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NexusRoutingRule(string name, Input<string> id, NexusRoutingRuleState? state = null, CustomResourceOptions? options = null)
            : base("nexus:index/nexusRoutingRule:NexusRoutingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/SimCubeLtd/pulumi-nexus/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NexusRoutingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NexusRoutingRule Get(string name, Input<string> id, NexusRoutingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NexusRoutingRule(name, id, state, options);
        }
    }

    public sealed class NexusRoutingRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the routing rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("matchers", required: true)]
        private InputList<string>? _matchers;

        /// <summary>
        /// Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above
        /// mode)
        /// </summary>
        public InputList<string> Matchers
        {
            get => _matchers ?? (_matchers = new InputList<string>());
            set => _matchers = value;
        }

        /// <summary>
        /// The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the routing rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NexusRoutingRuleArgs()
        {
        }
    }

    public sealed class NexusRoutingRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the routing rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("matchers")]
        private InputList<string>? _matchers;

        /// <summary>
        /// Matchers is a list of regular expressions used to identify request paths that are allowed or blocked (depending on above
        /// mode)
        /// </summary>
        public InputList<string> Matchers
        {
            get => _matchers ?? (_matchers = new InputList<string>());
            set => _matchers = value;
        }

        /// <summary>
        /// The mode describe how to hande with mathing requests. Possible values: `BLOCK` or `ALLOW` Default: `BLOCK`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the routing rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NexusRoutingRuleState()
        {
        }
    }
}
