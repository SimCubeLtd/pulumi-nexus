// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nexus
{
    [NexusResourceType("nexus:index/nexusSecuritySaml:NexusSecuritySaml")]
    public partial class NexusSecuritySaml : Pulumi.CustomResource
    {
        /// <summary>
        /// IdP field mappings for user's email address
        /// </summary>
        [Output("emailAttribute")]
        public Output<string?> EmailAttribute { get; private set; } = null!;

        /// <summary>
        /// Entity ID URI
        /// </summary>
        [Output("entityId")]
        public Output<string?> EntityId { get; private set; } = null!;

        /// <summary>
        /// IdP field mappings for user's given name
        /// </summary>
        [Output("firstNameAttribute")]
        public Output<string?> FirstNameAttribute { get; private set; } = null!;

        /// <summary>
        /// IdP field mappings for user's groups
        /// </summary>
        [Output("groupsAttribute")]
        public Output<string?> GroupsAttribute { get; private set; } = null!;

        /// <summary>
        /// SAML Identity Provider Metadata XML
        /// </summary>
        [Output("idpMetadata")]
        public Output<string> IdpMetadata { get; private set; } = null!;

        /// <summary>
        /// IdP field mappings for user's family name
        /// </summary>
        [Output("lastNameAttribute")]
        public Output<string?> LastNameAttribute { get; private set; } = null!;

        /// <summary>
        /// IdP field mappings for username
        /// </summary>
        [Output("usernameAttribute")]
        public Output<string> UsernameAttribute { get; private set; } = null!;

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// assertions.
        /// </summary>
        [Output("validateAssertionSignature")]
        public Output<bool?> ValidateAssertionSignature { get; private set; } = null!;

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// response.
        /// </summary>
        [Output("validateResponseSignature")]
        public Output<bool?> ValidateResponseSignature { get; private set; } = null!;


        /// <summary>
        /// Create a NexusSecuritySaml resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NexusSecuritySaml(string name, NexusSecuritySamlArgs args, CustomResourceOptions? options = null)
            : base("nexus:index/nexusSecuritySaml:NexusSecuritySaml", name, args ?? new NexusSecuritySamlArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NexusSecuritySaml(string name, Input<string> id, NexusSecuritySamlState? state = null, CustomResourceOptions? options = null)
            : base("nexus:index/nexusSecuritySaml:NexusSecuritySaml", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/SimCubeLtd/pulumi-nexus/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NexusSecuritySaml resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NexusSecuritySaml Get(string name, Input<string> id, NexusSecuritySamlState? state = null, CustomResourceOptions? options = null)
        {
            return new NexusSecuritySaml(name, id, state, options);
        }
    }

    public sealed class NexusSecuritySamlArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// IdP field mappings for user's email address
        /// </summary>
        [Input("emailAttribute")]
        public Input<string>? EmailAttribute { get; set; }

        /// <summary>
        /// Entity ID URI
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// IdP field mappings for user's given name
        /// </summary>
        [Input("firstNameAttribute")]
        public Input<string>? FirstNameAttribute { get; set; }

        /// <summary>
        /// IdP field mappings for user's groups
        /// </summary>
        [Input("groupsAttribute")]
        public Input<string>? GroupsAttribute { get; set; }

        /// <summary>
        /// SAML Identity Provider Metadata XML
        /// </summary>
        [Input("idpMetadata", required: true)]
        public Input<string> IdpMetadata { get; set; } = null!;

        /// <summary>
        /// IdP field mappings for user's family name
        /// </summary>
        [Input("lastNameAttribute")]
        public Input<string>? LastNameAttribute { get; set; }

        /// <summary>
        /// IdP field mappings for username
        /// </summary>
        [Input("usernameAttribute", required: true)]
        public Input<string> UsernameAttribute { get; set; } = null!;

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// assertions.
        /// </summary>
        [Input("validateAssertionSignature")]
        public Input<bool>? ValidateAssertionSignature { get; set; }

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// response.
        /// </summary>
        [Input("validateResponseSignature")]
        public Input<bool>? ValidateResponseSignature { get; set; }

        public NexusSecuritySamlArgs()
        {
        }
    }

    public sealed class NexusSecuritySamlState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// IdP field mappings for user's email address
        /// </summary>
        [Input("emailAttribute")]
        public Input<string>? EmailAttribute { get; set; }

        /// <summary>
        /// Entity ID URI
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// IdP field mappings for user's given name
        /// </summary>
        [Input("firstNameAttribute")]
        public Input<string>? FirstNameAttribute { get; set; }

        /// <summary>
        /// IdP field mappings for user's groups
        /// </summary>
        [Input("groupsAttribute")]
        public Input<string>? GroupsAttribute { get; set; }

        /// <summary>
        /// SAML Identity Provider Metadata XML
        /// </summary>
        [Input("idpMetadata")]
        public Input<string>? IdpMetadata { get; set; }

        /// <summary>
        /// IdP field mappings for user's family name
        /// </summary>
        [Input("lastNameAttribute")]
        public Input<string>? LastNameAttribute { get; set; }

        /// <summary>
        /// IdP field mappings for username
        /// </summary>
        [Input("usernameAttribute")]
        public Input<string>? UsernameAttribute { get; set; }

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// assertions.
        /// </summary>
        [Input("validateAssertionSignature")]
        public Input<bool>? ValidateAssertionSignature { get; set; }

        /// <summary>
        /// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
        /// response.
        /// </summary>
        [Input("validateResponseSignature")]
        public Input<bool>? ValidateResponseSignature { get; set; }

        public NexusSecuritySamlState()
        {
        }
    }
}
