// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusBlobstoreAzure(ctx *pulumi.Context, args *LookupNexusBlobstoreAzureArgs, opts ...pulumi.InvokeOption) (*LookupNexusBlobstoreAzureResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusBlobstoreAzureResult
	err := ctx.Invoke("nexus:index/getNexusBlobstoreAzure:GetNexusBlobstoreAzure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusBlobstoreAzure.
type LookupNexusBlobstoreAzureArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusBlobstoreAzure.
type LookupNexusBlobstoreAzureResult struct {
	BlobCount            int                                         `pulumi:"blobCount"`
	BucketConfigurations []GetNexusBlobstoreAzureBucketConfiguration `pulumi:"bucketConfigurations"`
	Id                   string                                      `pulumi:"id"`
	Name                 string                                      `pulumi:"name"`
	SoftQuotas           []GetNexusBlobstoreAzureSoftQuota           `pulumi:"softQuotas"`
	TotalSizeInBytes     int                                         `pulumi:"totalSizeInBytes"`
}

func LookupNexusBlobstoreAzureOutput(ctx *pulumi.Context, args LookupNexusBlobstoreAzureOutputArgs, opts ...pulumi.InvokeOption) LookupNexusBlobstoreAzureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusBlobstoreAzureResult, error) {
			args := v.(LookupNexusBlobstoreAzureArgs)
			r, err := LookupNexusBlobstoreAzure(ctx, &args, opts...)
			var s LookupNexusBlobstoreAzureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusBlobstoreAzureResultOutput)
}

// A collection of arguments for invoking GetNexusBlobstoreAzure.
type LookupNexusBlobstoreAzureOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusBlobstoreAzureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusBlobstoreAzureArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusBlobstoreAzure.
type LookupNexusBlobstoreAzureResultOutput struct{ *pulumi.OutputState }

func (LookupNexusBlobstoreAzureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusBlobstoreAzureResult)(nil)).Elem()
}

func (o LookupNexusBlobstoreAzureResultOutput) ToLookupNexusBlobstoreAzureResultOutput() LookupNexusBlobstoreAzureResultOutput {
	return o
}

func (o LookupNexusBlobstoreAzureResultOutput) ToLookupNexusBlobstoreAzureResultOutputWithContext(ctx context.Context) LookupNexusBlobstoreAzureResultOutput {
	return o
}

func (o LookupNexusBlobstoreAzureResultOutput) BlobCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) int { return v.BlobCount }).(pulumi.IntOutput)
}

func (o LookupNexusBlobstoreAzureResultOutput) BucketConfigurations() GetNexusBlobstoreAzureBucketConfigurationArrayOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) []GetNexusBlobstoreAzureBucketConfiguration {
		return v.BucketConfigurations
	}).(GetNexusBlobstoreAzureBucketConfigurationArrayOutput)
}

func (o LookupNexusBlobstoreAzureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusBlobstoreAzureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusBlobstoreAzureResultOutput) SoftQuotas() GetNexusBlobstoreAzureSoftQuotaArrayOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) []GetNexusBlobstoreAzureSoftQuota { return v.SoftQuotas }).(GetNexusBlobstoreAzureSoftQuotaArrayOutput)
}

func (o LookupNexusBlobstoreAzureResultOutput) TotalSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreAzureResult) int { return v.TotalSizeInBytes }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusBlobstoreAzureResultOutput{})
}
