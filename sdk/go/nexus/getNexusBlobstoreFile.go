// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusBlobstoreFile(ctx *pulumi.Context, args *LookupNexusBlobstoreFileArgs, opts ...pulumi.InvokeOption) (*LookupNexusBlobstoreFileResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusBlobstoreFileResult
	err := ctx.Invoke("nexus:index/getNexusBlobstoreFile:GetNexusBlobstoreFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusBlobstoreFile.
type LookupNexusBlobstoreFileArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusBlobstoreFile.
type LookupNexusBlobstoreFileResult struct {
	AvailableSpaceInBytes int                              `pulumi:"availableSpaceInBytes"`
	BlobCount             int                              `pulumi:"blobCount"`
	Id                    string                           `pulumi:"id"`
	Name                  string                           `pulumi:"name"`
	Path                  string                           `pulumi:"path"`
	SoftQuotas            []GetNexusBlobstoreFileSoftQuota `pulumi:"softQuotas"`
	TotalSizeInBytes      int                              `pulumi:"totalSizeInBytes"`
}

func LookupNexusBlobstoreFileOutput(ctx *pulumi.Context, args LookupNexusBlobstoreFileOutputArgs, opts ...pulumi.InvokeOption) LookupNexusBlobstoreFileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusBlobstoreFileResult, error) {
			args := v.(LookupNexusBlobstoreFileArgs)
			r, err := LookupNexusBlobstoreFile(ctx, &args, opts...)
			var s LookupNexusBlobstoreFileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusBlobstoreFileResultOutput)
}

// A collection of arguments for invoking GetNexusBlobstoreFile.
type LookupNexusBlobstoreFileOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusBlobstoreFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusBlobstoreFileArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusBlobstoreFile.
type LookupNexusBlobstoreFileResultOutput struct{ *pulumi.OutputState }

func (LookupNexusBlobstoreFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusBlobstoreFileResult)(nil)).Elem()
}

func (o LookupNexusBlobstoreFileResultOutput) ToLookupNexusBlobstoreFileResultOutput() LookupNexusBlobstoreFileResultOutput {
	return o
}

func (o LookupNexusBlobstoreFileResultOutput) ToLookupNexusBlobstoreFileResultOutputWithContext(ctx context.Context) LookupNexusBlobstoreFileResultOutput {
	return o
}

func (o LookupNexusBlobstoreFileResultOutput) AvailableSpaceInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) int { return v.AvailableSpaceInBytes }).(pulumi.IntOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) BlobCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) int { return v.BlobCount }).(pulumi.IntOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) SoftQuotas() GetNexusBlobstoreFileSoftQuotaArrayOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) []GetNexusBlobstoreFileSoftQuota { return v.SoftQuotas }).(GetNexusBlobstoreFileSoftQuotaArrayOutput)
}

func (o LookupNexusBlobstoreFileResultOutput) TotalSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNexusBlobstoreFileResult) int { return v.TotalSizeInBytes }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusBlobstoreFileResultOutput{})
}
