// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusRepository(ctx *pulumi.Context, args *LookupNexusRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupNexusRepositoryResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusRepositoryResult
	err := ctx.Invoke("nexus:index/getNexusRepository:GetNexusRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusRepository.
type LookupNexusRepositoryArgs struct {
	AptSignings   []GetNexusRepositoryAptSigning   `pulumi:"aptSignings"`
	Apts          []GetNexusRepositoryApt          `pulumi:"apts"`
	Cleanups      []GetNexusRepositoryCleanup      `pulumi:"cleanups"`
	Dockers       []GetNexusRepositoryDocker       `pulumi:"dockers"`
	Format        *string                          `pulumi:"format"`
	Group         *GetNexusRepositoryGroup         `pulumi:"group"`
	HttpClient    *GetNexusRepositoryHttpClient    `pulumi:"httpClient"`
	Maven         *GetNexusRepositoryMaven         `pulumi:"maven"`
	Name          string                           `pulumi:"name"`
	NegativeCache *GetNexusRepositoryNegativeCache `pulumi:"negativeCache"`
	Online        *bool                            `pulumi:"online"`
	Proxy         *GetNexusRepositoryProxy         `pulumi:"proxy"`
	Storage       *GetNexusRepositoryStorage       `pulumi:"storage"`
	Type          *string                          `pulumi:"type"`
}

// A collection of values returned by GetNexusRepository.
type LookupNexusRepositoryResult struct {
	AptSignings   []GetNexusRepositoryAptSigning   `pulumi:"aptSignings"`
	Apts          []GetNexusRepositoryApt          `pulumi:"apts"`
	Cleanups      []GetNexusRepositoryCleanup      `pulumi:"cleanups"`
	Dockers       []GetNexusRepositoryDocker       `pulumi:"dockers"`
	Format        *string                          `pulumi:"format"`
	Group         *GetNexusRepositoryGroup         `pulumi:"group"`
	HttpClient    *GetNexusRepositoryHttpClient    `pulumi:"httpClient"`
	Id            string                           `pulumi:"id"`
	Maven         *GetNexusRepositoryMaven         `pulumi:"maven"`
	Name          string                           `pulumi:"name"`
	NegativeCache *GetNexusRepositoryNegativeCache `pulumi:"negativeCache"`
	Online        *bool                            `pulumi:"online"`
	Proxy         *GetNexusRepositoryProxy         `pulumi:"proxy"`
	Storage       *GetNexusRepositoryStorage       `pulumi:"storage"`
	Type          *string                          `pulumi:"type"`
}

func LookupNexusRepositoryOutput(ctx *pulumi.Context, args LookupNexusRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupNexusRepositoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusRepositoryResult, error) {
			args := v.(LookupNexusRepositoryArgs)
			r, err := LookupNexusRepository(ctx, &args, opts...)
			var s LookupNexusRepositoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusRepositoryResultOutput)
}

// A collection of arguments for invoking GetNexusRepository.
type LookupNexusRepositoryOutputArgs struct {
	AptSignings   GetNexusRepositoryAptSigningArrayInput  `pulumi:"aptSignings"`
	Apts          GetNexusRepositoryAptArrayInput         `pulumi:"apts"`
	Cleanups      GetNexusRepositoryCleanupArrayInput     `pulumi:"cleanups"`
	Dockers       GetNexusRepositoryDockerArrayInput      `pulumi:"dockers"`
	Format        pulumi.StringPtrInput                   `pulumi:"format"`
	Group         GetNexusRepositoryGroupPtrInput         `pulumi:"group"`
	HttpClient    GetNexusRepositoryHttpClientPtrInput    `pulumi:"httpClient"`
	Maven         GetNexusRepositoryMavenPtrInput         `pulumi:"maven"`
	Name          pulumi.StringInput                      `pulumi:"name"`
	NegativeCache GetNexusRepositoryNegativeCachePtrInput `pulumi:"negativeCache"`
	Online        pulumi.BoolPtrInput                     `pulumi:"online"`
	Proxy         GetNexusRepositoryProxyPtrInput         `pulumi:"proxy"`
	Storage       GetNexusRepositoryStoragePtrInput       `pulumi:"storage"`
	Type          pulumi.StringPtrInput                   `pulumi:"type"`
}

func (LookupNexusRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusRepository.
type LookupNexusRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupNexusRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryResult)(nil)).Elem()
}

func (o LookupNexusRepositoryResultOutput) ToLookupNexusRepositoryResultOutput() LookupNexusRepositoryResultOutput {
	return o
}

func (o LookupNexusRepositoryResultOutput) ToLookupNexusRepositoryResultOutputWithContext(ctx context.Context) LookupNexusRepositoryResultOutput {
	return o
}

func (o LookupNexusRepositoryResultOutput) AptSignings() GetNexusRepositoryAptSigningArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) []GetNexusRepositoryAptSigning { return v.AptSignings }).(GetNexusRepositoryAptSigningArrayOutput)
}

func (o LookupNexusRepositoryResultOutput) Apts() GetNexusRepositoryAptArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) []GetNexusRepositoryApt { return v.Apts }).(GetNexusRepositoryAptArrayOutput)
}

func (o LookupNexusRepositoryResultOutput) Cleanups() GetNexusRepositoryCleanupArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) []GetNexusRepositoryCleanup { return v.Cleanups }).(GetNexusRepositoryCleanupArrayOutput)
}

func (o LookupNexusRepositoryResultOutput) Dockers() GetNexusRepositoryDockerArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) []GetNexusRepositoryDocker { return v.Dockers }).(GetNexusRepositoryDockerArrayOutput)
}

func (o LookupNexusRepositoryResultOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Group() GetNexusRepositoryGroupPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryGroup { return v.Group }).(GetNexusRepositoryGroupPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) HttpClient() GetNexusRepositoryHttpClientPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryHttpClient { return v.HttpClient }).(GetNexusRepositoryHttpClientPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryResultOutput) Maven() GetNexusRepositoryMavenPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryMaven { return v.Maven }).(GetNexusRepositoryMavenPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryResultOutput) NegativeCache() GetNexusRepositoryNegativeCachePtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryNegativeCache { return v.NegativeCache }).(GetNexusRepositoryNegativeCachePtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *bool { return v.Online }).(pulumi.BoolPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Proxy() GetNexusRepositoryProxyPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryProxy { return v.Proxy }).(GetNexusRepositoryProxyPtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Storage() GetNexusRepositoryStoragePtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *GetNexusRepositoryStorage { return v.Storage }).(GetNexusRepositoryStoragePtrOutput)
}

func (o LookupNexusRepositoryResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNexusRepositoryResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusRepositoryResultOutput{})
}
