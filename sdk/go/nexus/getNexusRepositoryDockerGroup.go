// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusRepositoryDockerGroup(ctx *pulumi.Context, args *LookupNexusRepositoryDockerGroupArgs, opts ...pulumi.InvokeOption) (*LookupNexusRepositoryDockerGroupResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusRepositoryDockerGroupResult
	err := ctx.Invoke("nexus:index/getNexusRepositoryDockerGroup:GetNexusRepositoryDockerGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusRepositoryDockerGroup.
type LookupNexusRepositoryDockerGroupArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusRepositoryDockerGroup.
type LookupNexusRepositoryDockerGroupResult struct {
	Dockers  []GetNexusRepositoryDockerGroupDocker  `pulumi:"dockers"`
	Groups   []GetNexusRepositoryDockerGroupGroup   `pulumi:"groups"`
	Id       string                                 `pulumi:"id"`
	Name     string                                 `pulumi:"name"`
	Online   bool                                   `pulumi:"online"`
	Storages []GetNexusRepositoryDockerGroupStorage `pulumi:"storages"`
}

func LookupNexusRepositoryDockerGroupOutput(ctx *pulumi.Context, args LookupNexusRepositoryDockerGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNexusRepositoryDockerGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusRepositoryDockerGroupResult, error) {
			args := v.(LookupNexusRepositoryDockerGroupArgs)
			r, err := LookupNexusRepositoryDockerGroup(ctx, &args, opts...)
			var s LookupNexusRepositoryDockerGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusRepositoryDockerGroupResultOutput)
}

// A collection of arguments for invoking GetNexusRepositoryDockerGroup.
type LookupNexusRepositoryDockerGroupOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusRepositoryDockerGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryDockerGroupArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusRepositoryDockerGroup.
type LookupNexusRepositoryDockerGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNexusRepositoryDockerGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryDockerGroupResult)(nil)).Elem()
}

func (o LookupNexusRepositoryDockerGroupResultOutput) ToLookupNexusRepositoryDockerGroupResultOutput() LookupNexusRepositoryDockerGroupResultOutput {
	return o
}

func (o LookupNexusRepositoryDockerGroupResultOutput) ToLookupNexusRepositoryDockerGroupResultOutputWithContext(ctx context.Context) LookupNexusRepositoryDockerGroupResultOutput {
	return o
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Dockers() GetNexusRepositoryDockerGroupDockerArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) []GetNexusRepositoryDockerGroupDocker { return v.Dockers }).(GetNexusRepositoryDockerGroupDockerArrayOutput)
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Groups() GetNexusRepositoryDockerGroupGroupArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) []GetNexusRepositoryDockerGroupGroup { return v.Groups }).(GetNexusRepositoryDockerGroupGroupArrayOutput)
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Online() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) bool { return v.Online }).(pulumi.BoolOutput)
}

func (o LookupNexusRepositoryDockerGroupResultOutput) Storages() GetNexusRepositoryDockerGroupStorageArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerGroupResult) []GetNexusRepositoryDockerGroupStorage {
		return v.Storages
	}).(GetNexusRepositoryDockerGroupStorageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusRepositoryDockerGroupResultOutput{})
}
