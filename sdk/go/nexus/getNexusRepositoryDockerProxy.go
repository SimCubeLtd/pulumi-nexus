// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusRepositoryDockerProxy(ctx *pulumi.Context, args *LookupNexusRepositoryDockerProxyArgs, opts ...pulumi.InvokeOption) (*LookupNexusRepositoryDockerProxyResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusRepositoryDockerProxyResult
	err := ctx.Invoke("nexus:index/getNexusRepositoryDockerProxy:GetNexusRepositoryDockerProxy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusRepositoryDockerProxy.
type LookupNexusRepositoryDockerProxyArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusRepositoryDockerProxy.
type LookupNexusRepositoryDockerProxyResult struct {
	Cleanups       []GetNexusRepositoryDockerProxyCleanup      `pulumi:"cleanups"`
	DockerProxies  []GetNexusRepositoryDockerProxyDockerProxy  `pulumi:"dockerProxies"`
	Dockers        []GetNexusRepositoryDockerProxyDocker       `pulumi:"dockers"`
	HttpClients    []GetNexusRepositoryDockerProxyHttpClient   `pulumi:"httpClients"`
	Id             string                                      `pulumi:"id"`
	Name           string                                      `pulumi:"name"`
	NegativeCaches []GetNexusRepositoryDockerProxyNegativeCach `pulumi:"negativeCaches"`
	Online         bool                                        `pulumi:"online"`
	Proxies        []GetNexusRepositoryDockerProxyProxy        `pulumi:"proxies"`
	RoutingRule    string                                      `pulumi:"routingRule"`
	Storages       []GetNexusRepositoryDockerProxyStorage      `pulumi:"storages"`
}

func LookupNexusRepositoryDockerProxyOutput(ctx *pulumi.Context, args LookupNexusRepositoryDockerProxyOutputArgs, opts ...pulumi.InvokeOption) LookupNexusRepositoryDockerProxyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusRepositoryDockerProxyResult, error) {
			args := v.(LookupNexusRepositoryDockerProxyArgs)
			r, err := LookupNexusRepositoryDockerProxy(ctx, &args, opts...)
			var s LookupNexusRepositoryDockerProxyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusRepositoryDockerProxyResultOutput)
}

// A collection of arguments for invoking GetNexusRepositoryDockerProxy.
type LookupNexusRepositoryDockerProxyOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusRepositoryDockerProxyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryDockerProxyArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusRepositoryDockerProxy.
type LookupNexusRepositoryDockerProxyResultOutput struct{ *pulumi.OutputState }

func (LookupNexusRepositoryDockerProxyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryDockerProxyResult)(nil)).Elem()
}

func (o LookupNexusRepositoryDockerProxyResultOutput) ToLookupNexusRepositoryDockerProxyResultOutput() LookupNexusRepositoryDockerProxyResultOutput {
	return o
}

func (o LookupNexusRepositoryDockerProxyResultOutput) ToLookupNexusRepositoryDockerProxyResultOutputWithContext(ctx context.Context) LookupNexusRepositoryDockerProxyResultOutput {
	return o
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Cleanups() GetNexusRepositoryDockerProxyCleanupArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyCleanup {
		return v.Cleanups
	}).(GetNexusRepositoryDockerProxyCleanupArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) DockerProxies() GetNexusRepositoryDockerProxyDockerProxyArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyDockerProxy {
		return v.DockerProxies
	}).(GetNexusRepositoryDockerProxyDockerProxyArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Dockers() GetNexusRepositoryDockerProxyDockerArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyDocker { return v.Dockers }).(GetNexusRepositoryDockerProxyDockerArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) HttpClients() GetNexusRepositoryDockerProxyHttpClientArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyHttpClient {
		return v.HttpClients
	}).(GetNexusRepositoryDockerProxyHttpClientArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) NegativeCaches() GetNexusRepositoryDockerProxyNegativeCachArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyNegativeCach {
		return v.NegativeCaches
	}).(GetNexusRepositoryDockerProxyNegativeCachArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Online() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) bool { return v.Online }).(pulumi.BoolOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Proxies() GetNexusRepositoryDockerProxyProxyArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyProxy { return v.Proxies }).(GetNexusRepositoryDockerProxyProxyArrayOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) RoutingRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) string { return v.RoutingRule }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryDockerProxyResultOutput) Storages() GetNexusRepositoryDockerProxyStorageArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryDockerProxyResult) []GetNexusRepositoryDockerProxyStorage {
		return v.Storages
	}).(GetNexusRepositoryDockerProxyStorageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusRepositoryDockerProxyResultOutput{})
}
