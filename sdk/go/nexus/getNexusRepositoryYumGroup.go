// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusRepositoryYumGroup(ctx *pulumi.Context, args *LookupNexusRepositoryYumGroupArgs, opts ...pulumi.InvokeOption) (*LookupNexusRepositoryYumGroupResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusRepositoryYumGroupResult
	err := ctx.Invoke("nexus:index/getNexusRepositoryYumGroup:GetNexusRepositoryYumGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusRepositoryYumGroup.
type LookupNexusRepositoryYumGroupArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusRepositoryYumGroup.
type LookupNexusRepositoryYumGroupResult struct {
	Groups      []GetNexusRepositoryYumGroupGroup      `pulumi:"groups"`
	Id          string                                 `pulumi:"id"`
	Name        string                                 `pulumi:"name"`
	Online      bool                                   `pulumi:"online"`
	Storages    []GetNexusRepositoryYumGroupStorage    `pulumi:"storages"`
	YumSignings []GetNexusRepositoryYumGroupYumSigning `pulumi:"yumSignings"`
}

func LookupNexusRepositoryYumGroupOutput(ctx *pulumi.Context, args LookupNexusRepositoryYumGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNexusRepositoryYumGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusRepositoryYumGroupResult, error) {
			args := v.(LookupNexusRepositoryYumGroupArgs)
			r, err := LookupNexusRepositoryYumGroup(ctx, &args, opts...)
			var s LookupNexusRepositoryYumGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusRepositoryYumGroupResultOutput)
}

// A collection of arguments for invoking GetNexusRepositoryYumGroup.
type LookupNexusRepositoryYumGroupOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusRepositoryYumGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryYumGroupArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusRepositoryYumGroup.
type LookupNexusRepositoryYumGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNexusRepositoryYumGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryYumGroupResult)(nil)).Elem()
}

func (o LookupNexusRepositoryYumGroupResultOutput) ToLookupNexusRepositoryYumGroupResultOutput() LookupNexusRepositoryYumGroupResultOutput {
	return o
}

func (o LookupNexusRepositoryYumGroupResultOutput) ToLookupNexusRepositoryYumGroupResultOutputWithContext(ctx context.Context) LookupNexusRepositoryYumGroupResultOutput {
	return o
}

func (o LookupNexusRepositoryYumGroupResultOutput) Groups() GetNexusRepositoryYumGroupGroupArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) []GetNexusRepositoryYumGroupGroup { return v.Groups }).(GetNexusRepositoryYumGroupGroupArrayOutput)
}

func (o LookupNexusRepositoryYumGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryYumGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryYumGroupResultOutput) Online() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) bool { return v.Online }).(pulumi.BoolOutput)
}

func (o LookupNexusRepositoryYumGroupResultOutput) Storages() GetNexusRepositoryYumGroupStorageArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) []GetNexusRepositoryYumGroupStorage { return v.Storages }).(GetNexusRepositoryYumGroupStorageArrayOutput)
}

func (o LookupNexusRepositoryYumGroupResultOutput) YumSignings() GetNexusRepositoryYumGroupYumSigningArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumGroupResult) []GetNexusRepositoryYumGroupYumSigning {
		return v.YumSignings
	}).(GetNexusRepositoryYumGroupYumSigningArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusRepositoryYumGroupResultOutput{})
}
