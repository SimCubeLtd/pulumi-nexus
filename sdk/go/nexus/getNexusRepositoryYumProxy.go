// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNexusRepositoryYumProxy(ctx *pulumi.Context, args *LookupNexusRepositoryYumProxyArgs, opts ...pulumi.InvokeOption) (*LookupNexusRepositoryYumProxyResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNexusRepositoryYumProxyResult
	err := ctx.Invoke("nexus:index/getNexusRepositoryYumProxy:GetNexusRepositoryYumProxy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNexusRepositoryYumProxy.
type LookupNexusRepositoryYumProxyArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by GetNexusRepositoryYumProxy.
type LookupNexusRepositoryYumProxyResult struct {
	Cleanups       []GetNexusRepositoryYumProxyCleanup      `pulumi:"cleanups"`
	HttpClients    []GetNexusRepositoryYumProxyHttpClient   `pulumi:"httpClients"`
	Id             string                                   `pulumi:"id"`
	Name           string                                   `pulumi:"name"`
	NegativeCaches []GetNexusRepositoryYumProxyNegativeCach `pulumi:"negativeCaches"`
	Online         bool                                     `pulumi:"online"`
	Proxies        []GetNexusRepositoryYumProxyProxy        `pulumi:"proxies"`
	RoutingRule    string                                   `pulumi:"routingRule"`
	Storages       []GetNexusRepositoryYumProxyStorage      `pulumi:"storages"`
	YumSignings    []GetNexusRepositoryYumProxyYumSigning   `pulumi:"yumSignings"`
}

func LookupNexusRepositoryYumProxyOutput(ctx *pulumi.Context, args LookupNexusRepositoryYumProxyOutputArgs, opts ...pulumi.InvokeOption) LookupNexusRepositoryYumProxyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNexusRepositoryYumProxyResult, error) {
			args := v.(LookupNexusRepositoryYumProxyArgs)
			r, err := LookupNexusRepositoryYumProxy(ctx, &args, opts...)
			var s LookupNexusRepositoryYumProxyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNexusRepositoryYumProxyResultOutput)
}

// A collection of arguments for invoking GetNexusRepositoryYumProxy.
type LookupNexusRepositoryYumProxyOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNexusRepositoryYumProxyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryYumProxyArgs)(nil)).Elem()
}

// A collection of values returned by GetNexusRepositoryYumProxy.
type LookupNexusRepositoryYumProxyResultOutput struct{ *pulumi.OutputState }

func (LookupNexusRepositoryYumProxyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNexusRepositoryYumProxyResult)(nil)).Elem()
}

func (o LookupNexusRepositoryYumProxyResultOutput) ToLookupNexusRepositoryYumProxyResultOutput() LookupNexusRepositoryYumProxyResultOutput {
	return o
}

func (o LookupNexusRepositoryYumProxyResultOutput) ToLookupNexusRepositoryYumProxyResultOutputWithContext(ctx context.Context) LookupNexusRepositoryYumProxyResultOutput {
	return o
}

func (o LookupNexusRepositoryYumProxyResultOutput) Cleanups() GetNexusRepositoryYumProxyCleanupArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyCleanup { return v.Cleanups }).(GetNexusRepositoryYumProxyCleanupArrayOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) HttpClients() GetNexusRepositoryYumProxyHttpClientArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyHttpClient {
		return v.HttpClients
	}).(GetNexusRepositoryYumProxyHttpClientArrayOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) NegativeCaches() GetNexusRepositoryYumProxyNegativeCachArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyNegativeCach {
		return v.NegativeCaches
	}).(GetNexusRepositoryYumProxyNegativeCachArrayOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) Online() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) bool { return v.Online }).(pulumi.BoolOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) Proxies() GetNexusRepositoryYumProxyProxyArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyProxy { return v.Proxies }).(GetNexusRepositoryYumProxyProxyArrayOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) RoutingRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) string { return v.RoutingRule }).(pulumi.StringOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) Storages() GetNexusRepositoryYumProxyStorageArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyStorage { return v.Storages }).(GetNexusRepositoryYumProxyStorageArrayOutput)
}

func (o LookupNexusRepositoryYumProxyResultOutput) YumSignings() GetNexusRepositoryYumProxyYumSigningArrayOutput {
	return o.ApplyT(func(v LookupNexusRepositoryYumProxyResult) []GetNexusRepositoryYumProxyYumSigning {
		return v.YumSignings
	}).(GetNexusRepositoryYumProxyYumSigningArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNexusRepositoryYumProxyResultOutput{})
}
