// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NexusSecurityRealms struct {
	pulumi.CustomResourceState

	// The realm IDs
	Actives pulumi.StringArrayOutput `pulumi:"actives"`
}

// NewNexusSecurityRealms registers a new resource with the given unique name, arguments, and options.
func NewNexusSecurityRealms(ctx *pulumi.Context,
	name string, args *NexusSecurityRealmsArgs, opts ...pulumi.ResourceOption) (*NexusSecurityRealms, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Actives == nil {
		return nil, errors.New("invalid value for required argument 'Actives'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NexusSecurityRealms
	err := ctx.RegisterResource("nexus:index/nexusSecurityRealms:NexusSecurityRealms", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNexusSecurityRealms gets an existing NexusSecurityRealms resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNexusSecurityRealms(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NexusSecurityRealmsState, opts ...pulumi.ResourceOption) (*NexusSecurityRealms, error) {
	var resource NexusSecurityRealms
	err := ctx.ReadResource("nexus:index/nexusSecurityRealms:NexusSecurityRealms", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NexusSecurityRealms resources.
type nexusSecurityRealmsState struct {
	// The realm IDs
	Actives []string `pulumi:"actives"`
}

type NexusSecurityRealmsState struct {
	// The realm IDs
	Actives pulumi.StringArrayInput
}

func (NexusSecurityRealmsState) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityRealmsState)(nil)).Elem()
}

type nexusSecurityRealmsArgs struct {
	// The realm IDs
	Actives []string `pulumi:"actives"`
}

// The set of arguments for constructing a NexusSecurityRealms resource.
type NexusSecurityRealmsArgs struct {
	// The realm IDs
	Actives pulumi.StringArrayInput
}

func (NexusSecurityRealmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityRealmsArgs)(nil)).Elem()
}

type NexusSecurityRealmsInput interface {
	pulumi.Input

	ToNexusSecurityRealmsOutput() NexusSecurityRealmsOutput
	ToNexusSecurityRealmsOutputWithContext(ctx context.Context) NexusSecurityRealmsOutput
}

func (*NexusSecurityRealms) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityRealms)(nil)).Elem()
}

func (i *NexusSecurityRealms) ToNexusSecurityRealmsOutput() NexusSecurityRealmsOutput {
	return i.ToNexusSecurityRealmsOutputWithContext(context.Background())
}

func (i *NexusSecurityRealms) ToNexusSecurityRealmsOutputWithContext(ctx context.Context) NexusSecurityRealmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRealmsOutput)
}

// NexusSecurityRealmsArrayInput is an input type that accepts NexusSecurityRealmsArray and NexusSecurityRealmsArrayOutput values.
// You can construct a concrete instance of `NexusSecurityRealmsArrayInput` via:
//
//          NexusSecurityRealmsArray{ NexusSecurityRealmsArgs{...} }
type NexusSecurityRealmsArrayInput interface {
	pulumi.Input

	ToNexusSecurityRealmsArrayOutput() NexusSecurityRealmsArrayOutput
	ToNexusSecurityRealmsArrayOutputWithContext(context.Context) NexusSecurityRealmsArrayOutput
}

type NexusSecurityRealmsArray []NexusSecurityRealmsInput

func (NexusSecurityRealmsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityRealms)(nil)).Elem()
}

func (i NexusSecurityRealmsArray) ToNexusSecurityRealmsArrayOutput() NexusSecurityRealmsArrayOutput {
	return i.ToNexusSecurityRealmsArrayOutputWithContext(context.Background())
}

func (i NexusSecurityRealmsArray) ToNexusSecurityRealmsArrayOutputWithContext(ctx context.Context) NexusSecurityRealmsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRealmsArrayOutput)
}

// NexusSecurityRealmsMapInput is an input type that accepts NexusSecurityRealmsMap and NexusSecurityRealmsMapOutput values.
// You can construct a concrete instance of `NexusSecurityRealmsMapInput` via:
//
//          NexusSecurityRealmsMap{ "key": NexusSecurityRealmsArgs{...} }
type NexusSecurityRealmsMapInput interface {
	pulumi.Input

	ToNexusSecurityRealmsMapOutput() NexusSecurityRealmsMapOutput
	ToNexusSecurityRealmsMapOutputWithContext(context.Context) NexusSecurityRealmsMapOutput
}

type NexusSecurityRealmsMap map[string]NexusSecurityRealmsInput

func (NexusSecurityRealmsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityRealms)(nil)).Elem()
}

func (i NexusSecurityRealmsMap) ToNexusSecurityRealmsMapOutput() NexusSecurityRealmsMapOutput {
	return i.ToNexusSecurityRealmsMapOutputWithContext(context.Background())
}

func (i NexusSecurityRealmsMap) ToNexusSecurityRealmsMapOutputWithContext(ctx context.Context) NexusSecurityRealmsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRealmsMapOutput)
}

type NexusSecurityRealmsOutput struct{ *pulumi.OutputState }

func (NexusSecurityRealmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityRealms)(nil)).Elem()
}

func (o NexusSecurityRealmsOutput) ToNexusSecurityRealmsOutput() NexusSecurityRealmsOutput {
	return o
}

func (o NexusSecurityRealmsOutput) ToNexusSecurityRealmsOutputWithContext(ctx context.Context) NexusSecurityRealmsOutput {
	return o
}

// The realm IDs
func (o NexusSecurityRealmsOutput) Actives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NexusSecurityRealms) pulumi.StringArrayOutput { return v.Actives }).(pulumi.StringArrayOutput)
}

type NexusSecurityRealmsArrayOutput struct{ *pulumi.OutputState }

func (NexusSecurityRealmsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityRealms)(nil)).Elem()
}

func (o NexusSecurityRealmsArrayOutput) ToNexusSecurityRealmsArrayOutput() NexusSecurityRealmsArrayOutput {
	return o
}

func (o NexusSecurityRealmsArrayOutput) ToNexusSecurityRealmsArrayOutputWithContext(ctx context.Context) NexusSecurityRealmsArrayOutput {
	return o
}

func (o NexusSecurityRealmsArrayOutput) Index(i pulumi.IntInput) NexusSecurityRealmsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NexusSecurityRealms {
		return vs[0].([]*NexusSecurityRealms)[vs[1].(int)]
	}).(NexusSecurityRealmsOutput)
}

type NexusSecurityRealmsMapOutput struct{ *pulumi.OutputState }

func (NexusSecurityRealmsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityRealms)(nil)).Elem()
}

func (o NexusSecurityRealmsMapOutput) ToNexusSecurityRealmsMapOutput() NexusSecurityRealmsMapOutput {
	return o
}

func (o NexusSecurityRealmsMapOutput) ToNexusSecurityRealmsMapOutputWithContext(ctx context.Context) NexusSecurityRealmsMapOutput {
	return o
}

func (o NexusSecurityRealmsMapOutput) MapIndex(k pulumi.StringInput) NexusSecurityRealmsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NexusSecurityRealms {
		return vs[0].(map[string]*NexusSecurityRealms)[vs[1].(string)]
	}).(NexusSecurityRealmsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRealmsInput)(nil)).Elem(), &NexusSecurityRealms{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRealmsArrayInput)(nil)).Elem(), NexusSecurityRealmsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRealmsMapInput)(nil)).Elem(), NexusSecurityRealmsMap{})
	pulumi.RegisterOutputType(NexusSecurityRealmsOutput{})
	pulumi.RegisterOutputType(NexusSecurityRealmsArrayOutput{})
	pulumi.RegisterOutputType(NexusSecurityRealmsMapOutput{})
}
