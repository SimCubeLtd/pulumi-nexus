// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NexusSecurityRole struct {
	pulumi.CustomResourceState

	// The description of this role.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the role.
	Name pulumi.StringOutput `pulumi:"name"`
	// The privileges of this role.
	Privileges pulumi.StringArrayOutput `pulumi:"privileges"`
	// The id of the role.
	Roleid pulumi.StringOutput `pulumi:"roleid"`
	// The roles of this role.
	Roles pulumi.StringArrayOutput `pulumi:"roles"`
}

// NewNexusSecurityRole registers a new resource with the given unique name, arguments, and options.
func NewNexusSecurityRole(ctx *pulumi.Context,
	name string, args *NexusSecurityRoleArgs, opts ...pulumi.ResourceOption) (*NexusSecurityRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Roleid == nil {
		return nil, errors.New("invalid value for required argument 'Roleid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NexusSecurityRole
	err := ctx.RegisterResource("nexus:index/nexusSecurityRole:NexusSecurityRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNexusSecurityRole gets an existing NexusSecurityRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNexusSecurityRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NexusSecurityRoleState, opts ...pulumi.ResourceOption) (*NexusSecurityRole, error) {
	var resource NexusSecurityRole
	err := ctx.ReadResource("nexus:index/nexusSecurityRole:NexusSecurityRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NexusSecurityRole resources.
type nexusSecurityRoleState struct {
	// The description of this role.
	Description *string `pulumi:"description"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// The privileges of this role.
	Privileges []string `pulumi:"privileges"`
	// The id of the role.
	Roleid *string `pulumi:"roleid"`
	// The roles of this role.
	Roles []string `pulumi:"roles"`
}

type NexusSecurityRoleState struct {
	// The description of this role.
	Description pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// The privileges of this role.
	Privileges pulumi.StringArrayInput
	// The id of the role.
	Roleid pulumi.StringPtrInput
	// The roles of this role.
	Roles pulumi.StringArrayInput
}

func (NexusSecurityRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityRoleState)(nil)).Elem()
}

type nexusSecurityRoleArgs struct {
	// The description of this role.
	Description *string `pulumi:"description"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// The privileges of this role.
	Privileges []string `pulumi:"privileges"`
	// The id of the role.
	Roleid string `pulumi:"roleid"`
	// The roles of this role.
	Roles []string `pulumi:"roles"`
}

// The set of arguments for constructing a NexusSecurityRole resource.
type NexusSecurityRoleArgs struct {
	// The description of this role.
	Description pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// The privileges of this role.
	Privileges pulumi.StringArrayInput
	// The id of the role.
	Roleid pulumi.StringInput
	// The roles of this role.
	Roles pulumi.StringArrayInput
}

func (NexusSecurityRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityRoleArgs)(nil)).Elem()
}

type NexusSecurityRoleInput interface {
	pulumi.Input

	ToNexusSecurityRoleOutput() NexusSecurityRoleOutput
	ToNexusSecurityRoleOutputWithContext(ctx context.Context) NexusSecurityRoleOutput
}

func (*NexusSecurityRole) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityRole)(nil)).Elem()
}

func (i *NexusSecurityRole) ToNexusSecurityRoleOutput() NexusSecurityRoleOutput {
	return i.ToNexusSecurityRoleOutputWithContext(context.Background())
}

func (i *NexusSecurityRole) ToNexusSecurityRoleOutputWithContext(ctx context.Context) NexusSecurityRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRoleOutput)
}

// NexusSecurityRoleArrayInput is an input type that accepts NexusSecurityRoleArray and NexusSecurityRoleArrayOutput values.
// You can construct a concrete instance of `NexusSecurityRoleArrayInput` via:
//
//          NexusSecurityRoleArray{ NexusSecurityRoleArgs{...} }
type NexusSecurityRoleArrayInput interface {
	pulumi.Input

	ToNexusSecurityRoleArrayOutput() NexusSecurityRoleArrayOutput
	ToNexusSecurityRoleArrayOutputWithContext(context.Context) NexusSecurityRoleArrayOutput
}

type NexusSecurityRoleArray []NexusSecurityRoleInput

func (NexusSecurityRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityRole)(nil)).Elem()
}

func (i NexusSecurityRoleArray) ToNexusSecurityRoleArrayOutput() NexusSecurityRoleArrayOutput {
	return i.ToNexusSecurityRoleArrayOutputWithContext(context.Background())
}

func (i NexusSecurityRoleArray) ToNexusSecurityRoleArrayOutputWithContext(ctx context.Context) NexusSecurityRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRoleArrayOutput)
}

// NexusSecurityRoleMapInput is an input type that accepts NexusSecurityRoleMap and NexusSecurityRoleMapOutput values.
// You can construct a concrete instance of `NexusSecurityRoleMapInput` via:
//
//          NexusSecurityRoleMap{ "key": NexusSecurityRoleArgs{...} }
type NexusSecurityRoleMapInput interface {
	pulumi.Input

	ToNexusSecurityRoleMapOutput() NexusSecurityRoleMapOutput
	ToNexusSecurityRoleMapOutputWithContext(context.Context) NexusSecurityRoleMapOutput
}

type NexusSecurityRoleMap map[string]NexusSecurityRoleInput

func (NexusSecurityRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityRole)(nil)).Elem()
}

func (i NexusSecurityRoleMap) ToNexusSecurityRoleMapOutput() NexusSecurityRoleMapOutput {
	return i.ToNexusSecurityRoleMapOutputWithContext(context.Background())
}

func (i NexusSecurityRoleMap) ToNexusSecurityRoleMapOutputWithContext(ctx context.Context) NexusSecurityRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityRoleMapOutput)
}

type NexusSecurityRoleOutput struct{ *pulumi.OutputState }

func (NexusSecurityRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityRole)(nil)).Elem()
}

func (o NexusSecurityRoleOutput) ToNexusSecurityRoleOutput() NexusSecurityRoleOutput {
	return o
}

func (o NexusSecurityRoleOutput) ToNexusSecurityRoleOutputWithContext(ctx context.Context) NexusSecurityRoleOutput {
	return o
}

// The description of this role.
func (o NexusSecurityRoleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecurityRole) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the role.
func (o NexusSecurityRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The privileges of this role.
func (o NexusSecurityRoleOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NexusSecurityRole) pulumi.StringArrayOutput { return v.Privileges }).(pulumi.StringArrayOutput)
}

// The id of the role.
func (o NexusSecurityRoleOutput) Roleid() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityRole) pulumi.StringOutput { return v.Roleid }).(pulumi.StringOutput)
}

// The roles of this role.
func (o NexusSecurityRoleOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NexusSecurityRole) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

type NexusSecurityRoleArrayOutput struct{ *pulumi.OutputState }

func (NexusSecurityRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityRole)(nil)).Elem()
}

func (o NexusSecurityRoleArrayOutput) ToNexusSecurityRoleArrayOutput() NexusSecurityRoleArrayOutput {
	return o
}

func (o NexusSecurityRoleArrayOutput) ToNexusSecurityRoleArrayOutputWithContext(ctx context.Context) NexusSecurityRoleArrayOutput {
	return o
}

func (o NexusSecurityRoleArrayOutput) Index(i pulumi.IntInput) NexusSecurityRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NexusSecurityRole {
		return vs[0].([]*NexusSecurityRole)[vs[1].(int)]
	}).(NexusSecurityRoleOutput)
}

type NexusSecurityRoleMapOutput struct{ *pulumi.OutputState }

func (NexusSecurityRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityRole)(nil)).Elem()
}

func (o NexusSecurityRoleMapOutput) ToNexusSecurityRoleMapOutput() NexusSecurityRoleMapOutput {
	return o
}

func (o NexusSecurityRoleMapOutput) ToNexusSecurityRoleMapOutputWithContext(ctx context.Context) NexusSecurityRoleMapOutput {
	return o
}

func (o NexusSecurityRoleMapOutput) MapIndex(k pulumi.StringInput) NexusSecurityRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NexusSecurityRole {
		return vs[0].(map[string]*NexusSecurityRole)[vs[1].(string)]
	}).(NexusSecurityRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRoleInput)(nil)).Elem(), &NexusSecurityRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRoleArrayInput)(nil)).Elem(), NexusSecurityRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityRoleMapInput)(nil)).Elem(), NexusSecurityRoleMap{})
	pulumi.RegisterOutputType(NexusSecurityRoleOutput{})
	pulumi.RegisterOutputType(NexusSecurityRoleArrayOutput{})
	pulumi.RegisterOutputType(NexusSecurityRoleMapOutput{})
}
