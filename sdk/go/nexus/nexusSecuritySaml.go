// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NexusSecuritySaml struct {
	pulumi.CustomResourceState

	// IdP field mappings for user's email address
	EmailAttribute pulumi.StringPtrOutput `pulumi:"emailAttribute"`
	// Entity ID URI
	EntityId pulumi.StringPtrOutput `pulumi:"entityId"`
	// IdP field mappings for user's given name
	FirstNameAttribute pulumi.StringPtrOutput `pulumi:"firstNameAttribute"`
	// IdP field mappings for user's groups
	GroupsAttribute pulumi.StringPtrOutput `pulumi:"groupsAttribute"`
	// SAML Identity Provider Metadata XML
	IdpMetadata pulumi.StringOutput `pulumi:"idpMetadata"`
	// IdP field mappings for user's family name
	LastNameAttribute pulumi.StringPtrOutput `pulumi:"lastNameAttribute"`
	// IdP field mappings for username
	UsernameAttribute pulumi.StringOutput `pulumi:"usernameAttribute"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// assertions.
	ValidateAssertionSignature pulumi.BoolPtrOutput `pulumi:"validateAssertionSignature"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// response.
	ValidateResponseSignature pulumi.BoolPtrOutput `pulumi:"validateResponseSignature"`
}

// NewNexusSecuritySaml registers a new resource with the given unique name, arguments, and options.
func NewNexusSecuritySaml(ctx *pulumi.Context,
	name string, args *NexusSecuritySamlArgs, opts ...pulumi.ResourceOption) (*NexusSecuritySaml, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdpMetadata == nil {
		return nil, errors.New("invalid value for required argument 'IdpMetadata'")
	}
	if args.UsernameAttribute == nil {
		return nil, errors.New("invalid value for required argument 'UsernameAttribute'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NexusSecuritySaml
	err := ctx.RegisterResource("nexus:index/nexusSecuritySaml:NexusSecuritySaml", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNexusSecuritySaml gets an existing NexusSecuritySaml resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNexusSecuritySaml(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NexusSecuritySamlState, opts ...pulumi.ResourceOption) (*NexusSecuritySaml, error) {
	var resource NexusSecuritySaml
	err := ctx.ReadResource("nexus:index/nexusSecuritySaml:NexusSecuritySaml", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NexusSecuritySaml resources.
type nexusSecuritySamlState struct {
	// IdP field mappings for user's email address
	EmailAttribute *string `pulumi:"emailAttribute"`
	// Entity ID URI
	EntityId *string `pulumi:"entityId"`
	// IdP field mappings for user's given name
	FirstNameAttribute *string `pulumi:"firstNameAttribute"`
	// IdP field mappings for user's groups
	GroupsAttribute *string `pulumi:"groupsAttribute"`
	// SAML Identity Provider Metadata XML
	IdpMetadata *string `pulumi:"idpMetadata"`
	// IdP field mappings for user's family name
	LastNameAttribute *string `pulumi:"lastNameAttribute"`
	// IdP field mappings for username
	UsernameAttribute *string `pulumi:"usernameAttribute"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// assertions.
	ValidateAssertionSignature *bool `pulumi:"validateAssertionSignature"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// response.
	ValidateResponseSignature *bool `pulumi:"validateResponseSignature"`
}

type NexusSecuritySamlState struct {
	// IdP field mappings for user's email address
	EmailAttribute pulumi.StringPtrInput
	// Entity ID URI
	EntityId pulumi.StringPtrInput
	// IdP field mappings for user's given name
	FirstNameAttribute pulumi.StringPtrInput
	// IdP field mappings for user's groups
	GroupsAttribute pulumi.StringPtrInput
	// SAML Identity Provider Metadata XML
	IdpMetadata pulumi.StringPtrInput
	// IdP field mappings for user's family name
	LastNameAttribute pulumi.StringPtrInput
	// IdP field mappings for username
	UsernameAttribute pulumi.StringPtrInput
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// assertions.
	ValidateAssertionSignature pulumi.BoolPtrInput
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// response.
	ValidateResponseSignature pulumi.BoolPtrInput
}

func (NexusSecuritySamlState) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecuritySamlState)(nil)).Elem()
}

type nexusSecuritySamlArgs struct {
	// IdP field mappings for user's email address
	EmailAttribute *string `pulumi:"emailAttribute"`
	// Entity ID URI
	EntityId *string `pulumi:"entityId"`
	// IdP field mappings for user's given name
	FirstNameAttribute *string `pulumi:"firstNameAttribute"`
	// IdP field mappings for user's groups
	GroupsAttribute *string `pulumi:"groupsAttribute"`
	// SAML Identity Provider Metadata XML
	IdpMetadata string `pulumi:"idpMetadata"`
	// IdP field mappings for user's family name
	LastNameAttribute *string `pulumi:"lastNameAttribute"`
	// IdP field mappings for username
	UsernameAttribute string `pulumi:"usernameAttribute"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// assertions.
	ValidateAssertionSignature *bool `pulumi:"validateAssertionSignature"`
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// response.
	ValidateResponseSignature *bool `pulumi:"validateResponseSignature"`
}

// The set of arguments for constructing a NexusSecuritySaml resource.
type NexusSecuritySamlArgs struct {
	// IdP field mappings for user's email address
	EmailAttribute pulumi.StringPtrInput
	// Entity ID URI
	EntityId pulumi.StringPtrInput
	// IdP field mappings for user's given name
	FirstNameAttribute pulumi.StringPtrInput
	// IdP field mappings for user's groups
	GroupsAttribute pulumi.StringPtrInput
	// SAML Identity Provider Metadata XML
	IdpMetadata pulumi.StringInput
	// IdP field mappings for user's family name
	LastNameAttribute pulumi.StringPtrInput
	// IdP field mappings for username
	UsernameAttribute pulumi.StringInput
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// assertions.
	ValidateAssertionSignature pulumi.BoolPtrInput
	// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
	// response.
	ValidateResponseSignature pulumi.BoolPtrInput
}

func (NexusSecuritySamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecuritySamlArgs)(nil)).Elem()
}

type NexusSecuritySamlInput interface {
	pulumi.Input

	ToNexusSecuritySamlOutput() NexusSecuritySamlOutput
	ToNexusSecuritySamlOutputWithContext(ctx context.Context) NexusSecuritySamlOutput
}

func (*NexusSecuritySaml) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecuritySaml)(nil)).Elem()
}

func (i *NexusSecuritySaml) ToNexusSecuritySamlOutput() NexusSecuritySamlOutput {
	return i.ToNexusSecuritySamlOutputWithContext(context.Background())
}

func (i *NexusSecuritySaml) ToNexusSecuritySamlOutputWithContext(ctx context.Context) NexusSecuritySamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecuritySamlOutput)
}

// NexusSecuritySamlArrayInput is an input type that accepts NexusSecuritySamlArray and NexusSecuritySamlArrayOutput values.
// You can construct a concrete instance of `NexusSecuritySamlArrayInput` via:
//
//          NexusSecuritySamlArray{ NexusSecuritySamlArgs{...} }
type NexusSecuritySamlArrayInput interface {
	pulumi.Input

	ToNexusSecuritySamlArrayOutput() NexusSecuritySamlArrayOutput
	ToNexusSecuritySamlArrayOutputWithContext(context.Context) NexusSecuritySamlArrayOutput
}

type NexusSecuritySamlArray []NexusSecuritySamlInput

func (NexusSecuritySamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecuritySaml)(nil)).Elem()
}

func (i NexusSecuritySamlArray) ToNexusSecuritySamlArrayOutput() NexusSecuritySamlArrayOutput {
	return i.ToNexusSecuritySamlArrayOutputWithContext(context.Background())
}

func (i NexusSecuritySamlArray) ToNexusSecuritySamlArrayOutputWithContext(ctx context.Context) NexusSecuritySamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecuritySamlArrayOutput)
}

// NexusSecuritySamlMapInput is an input type that accepts NexusSecuritySamlMap and NexusSecuritySamlMapOutput values.
// You can construct a concrete instance of `NexusSecuritySamlMapInput` via:
//
//          NexusSecuritySamlMap{ "key": NexusSecuritySamlArgs{...} }
type NexusSecuritySamlMapInput interface {
	pulumi.Input

	ToNexusSecuritySamlMapOutput() NexusSecuritySamlMapOutput
	ToNexusSecuritySamlMapOutputWithContext(context.Context) NexusSecuritySamlMapOutput
}

type NexusSecuritySamlMap map[string]NexusSecuritySamlInput

func (NexusSecuritySamlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecuritySaml)(nil)).Elem()
}

func (i NexusSecuritySamlMap) ToNexusSecuritySamlMapOutput() NexusSecuritySamlMapOutput {
	return i.ToNexusSecuritySamlMapOutputWithContext(context.Background())
}

func (i NexusSecuritySamlMap) ToNexusSecuritySamlMapOutputWithContext(ctx context.Context) NexusSecuritySamlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecuritySamlMapOutput)
}

type NexusSecuritySamlOutput struct{ *pulumi.OutputState }

func (NexusSecuritySamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecuritySaml)(nil)).Elem()
}

func (o NexusSecuritySamlOutput) ToNexusSecuritySamlOutput() NexusSecuritySamlOutput {
	return o
}

func (o NexusSecuritySamlOutput) ToNexusSecuritySamlOutputWithContext(ctx context.Context) NexusSecuritySamlOutput {
	return o
}

// IdP field mappings for user's email address
func (o NexusSecuritySamlOutput) EmailAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringPtrOutput { return v.EmailAttribute }).(pulumi.StringPtrOutput)
}

// Entity ID URI
func (o NexusSecuritySamlOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringPtrOutput { return v.EntityId }).(pulumi.StringPtrOutput)
}

// IdP field mappings for user's given name
func (o NexusSecuritySamlOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringPtrOutput { return v.FirstNameAttribute }).(pulumi.StringPtrOutput)
}

// IdP field mappings for user's groups
func (o NexusSecuritySamlOutput) GroupsAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringPtrOutput { return v.GroupsAttribute }).(pulumi.StringPtrOutput)
}

// SAML Identity Provider Metadata XML
func (o NexusSecuritySamlOutput) IdpMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringOutput { return v.IdpMetadata }).(pulumi.StringOutput)
}

// IdP field mappings for user's family name
func (o NexusSecuritySamlOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringPtrOutput { return v.LastNameAttribute }).(pulumi.StringPtrOutput)
}

// IdP field mappings for username
func (o NexusSecuritySamlOutput) UsernameAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.StringOutput { return v.UsernameAttribute }).(pulumi.StringOutput)
}

// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
// assertions.
func (o NexusSecuritySamlOutput) ValidateAssertionSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.BoolPtrOutput { return v.ValidateAssertionSignature }).(pulumi.BoolPtrOutput)
}

// By default, if a signing key is found in the IdP metadata, then NXRM will attempt to validate signatures on the
// response.
func (o NexusSecuritySamlOutput) ValidateResponseSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NexusSecuritySaml) pulumi.BoolPtrOutput { return v.ValidateResponseSignature }).(pulumi.BoolPtrOutput)
}

type NexusSecuritySamlArrayOutput struct{ *pulumi.OutputState }

func (NexusSecuritySamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecuritySaml)(nil)).Elem()
}

func (o NexusSecuritySamlArrayOutput) ToNexusSecuritySamlArrayOutput() NexusSecuritySamlArrayOutput {
	return o
}

func (o NexusSecuritySamlArrayOutput) ToNexusSecuritySamlArrayOutputWithContext(ctx context.Context) NexusSecuritySamlArrayOutput {
	return o
}

func (o NexusSecuritySamlArrayOutput) Index(i pulumi.IntInput) NexusSecuritySamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NexusSecuritySaml {
		return vs[0].([]*NexusSecuritySaml)[vs[1].(int)]
	}).(NexusSecuritySamlOutput)
}

type NexusSecuritySamlMapOutput struct{ *pulumi.OutputState }

func (NexusSecuritySamlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecuritySaml)(nil)).Elem()
}

func (o NexusSecuritySamlMapOutput) ToNexusSecuritySamlMapOutput() NexusSecuritySamlMapOutput {
	return o
}

func (o NexusSecuritySamlMapOutput) ToNexusSecuritySamlMapOutputWithContext(ctx context.Context) NexusSecuritySamlMapOutput {
	return o
}

func (o NexusSecuritySamlMapOutput) MapIndex(k pulumi.StringInput) NexusSecuritySamlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NexusSecuritySaml {
		return vs[0].(map[string]*NexusSecuritySaml)[vs[1].(string)]
	}).(NexusSecuritySamlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecuritySamlInput)(nil)).Elem(), &NexusSecuritySaml{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecuritySamlArrayInput)(nil)).Elem(), NexusSecuritySamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecuritySamlMapInput)(nil)).Elem(), NexusSecuritySamlMap{})
	pulumi.RegisterOutputType(NexusSecuritySamlOutput{})
	pulumi.RegisterOutputType(NexusSecuritySamlArrayOutput{})
	pulumi.RegisterOutputType(NexusSecuritySamlMapOutput{})
}
