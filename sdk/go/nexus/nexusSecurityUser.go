// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NexusSecurityUser struct {
	pulumi.CustomResourceState

	// The email address associated with the user.
	Email pulumi.StringOutput `pulumi:"email"`
	// The first name of the user.
	Firstname pulumi.StringOutput `pulumi:"firstname"`
	// The last name of the user.
	Lastname pulumi.StringOutput `pulumi:"lastname"`
	// The password for the user.
	Password pulumi.StringOutput `pulumi:"password"`
	// The roles which the user has been assigned within Nexus.
	Roles pulumi.StringArrayOutput `pulumi:"roles"`
	// The user's status, e.g. active or disabled.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The userid which is required for login. This value cannot be changed.
	Userid pulumi.StringOutput `pulumi:"userid"`
}

// NewNexusSecurityUser registers a new resource with the given unique name, arguments, and options.
func NewNexusSecurityUser(ctx *pulumi.Context,
	name string, args *NexusSecurityUserArgs, opts ...pulumi.ResourceOption) (*NexusSecurityUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.Firstname == nil {
		return nil, errors.New("invalid value for required argument 'Firstname'")
	}
	if args.Lastname == nil {
		return nil, errors.New("invalid value for required argument 'Lastname'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Userid == nil {
		return nil, errors.New("invalid value for required argument 'Userid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NexusSecurityUser
	err := ctx.RegisterResource("nexus:index/nexusSecurityUser:NexusSecurityUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNexusSecurityUser gets an existing NexusSecurityUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNexusSecurityUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NexusSecurityUserState, opts ...pulumi.ResourceOption) (*NexusSecurityUser, error) {
	var resource NexusSecurityUser
	err := ctx.ReadResource("nexus:index/nexusSecurityUser:NexusSecurityUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NexusSecurityUser resources.
type nexusSecurityUserState struct {
	// The email address associated with the user.
	Email *string `pulumi:"email"`
	// The first name of the user.
	Firstname *string `pulumi:"firstname"`
	// The last name of the user.
	Lastname *string `pulumi:"lastname"`
	// The password for the user.
	Password *string `pulumi:"password"`
	// The roles which the user has been assigned within Nexus.
	Roles []string `pulumi:"roles"`
	// The user's status, e.g. active or disabled.
	Status *string `pulumi:"status"`
	// The userid which is required for login. This value cannot be changed.
	Userid *string `pulumi:"userid"`
}

type NexusSecurityUserState struct {
	// The email address associated with the user.
	Email pulumi.StringPtrInput
	// The first name of the user.
	Firstname pulumi.StringPtrInput
	// The last name of the user.
	Lastname pulumi.StringPtrInput
	// The password for the user.
	Password pulumi.StringPtrInput
	// The roles which the user has been assigned within Nexus.
	Roles pulumi.StringArrayInput
	// The user's status, e.g. active or disabled.
	Status pulumi.StringPtrInput
	// The userid which is required for login. This value cannot be changed.
	Userid pulumi.StringPtrInput
}

func (NexusSecurityUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityUserState)(nil)).Elem()
}

type nexusSecurityUserArgs struct {
	// The email address associated with the user.
	Email string `pulumi:"email"`
	// The first name of the user.
	Firstname string `pulumi:"firstname"`
	// The last name of the user.
	Lastname string `pulumi:"lastname"`
	// The password for the user.
	Password string `pulumi:"password"`
	// The roles which the user has been assigned within Nexus.
	Roles []string `pulumi:"roles"`
	// The user's status, e.g. active or disabled.
	Status *string `pulumi:"status"`
	// The userid which is required for login. This value cannot be changed.
	Userid string `pulumi:"userid"`
}

// The set of arguments for constructing a NexusSecurityUser resource.
type NexusSecurityUserArgs struct {
	// The email address associated with the user.
	Email pulumi.StringInput
	// The first name of the user.
	Firstname pulumi.StringInput
	// The last name of the user.
	Lastname pulumi.StringInput
	// The password for the user.
	Password pulumi.StringInput
	// The roles which the user has been assigned within Nexus.
	Roles pulumi.StringArrayInput
	// The user's status, e.g. active or disabled.
	Status pulumi.StringPtrInput
	// The userid which is required for login. This value cannot be changed.
	Userid pulumi.StringInput
}

func (NexusSecurityUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityUserArgs)(nil)).Elem()
}

type NexusSecurityUserInput interface {
	pulumi.Input

	ToNexusSecurityUserOutput() NexusSecurityUserOutput
	ToNexusSecurityUserOutputWithContext(ctx context.Context) NexusSecurityUserOutput
}

func (*NexusSecurityUser) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityUser)(nil)).Elem()
}

func (i *NexusSecurityUser) ToNexusSecurityUserOutput() NexusSecurityUserOutput {
	return i.ToNexusSecurityUserOutputWithContext(context.Background())
}

func (i *NexusSecurityUser) ToNexusSecurityUserOutputWithContext(ctx context.Context) NexusSecurityUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserOutput)
}

// NexusSecurityUserArrayInput is an input type that accepts NexusSecurityUserArray and NexusSecurityUserArrayOutput values.
// You can construct a concrete instance of `NexusSecurityUserArrayInput` via:
//
//          NexusSecurityUserArray{ NexusSecurityUserArgs{...} }
type NexusSecurityUserArrayInput interface {
	pulumi.Input

	ToNexusSecurityUserArrayOutput() NexusSecurityUserArrayOutput
	ToNexusSecurityUserArrayOutputWithContext(context.Context) NexusSecurityUserArrayOutput
}

type NexusSecurityUserArray []NexusSecurityUserInput

func (NexusSecurityUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityUser)(nil)).Elem()
}

func (i NexusSecurityUserArray) ToNexusSecurityUserArrayOutput() NexusSecurityUserArrayOutput {
	return i.ToNexusSecurityUserArrayOutputWithContext(context.Background())
}

func (i NexusSecurityUserArray) ToNexusSecurityUserArrayOutputWithContext(ctx context.Context) NexusSecurityUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserArrayOutput)
}

// NexusSecurityUserMapInput is an input type that accepts NexusSecurityUserMap and NexusSecurityUserMapOutput values.
// You can construct a concrete instance of `NexusSecurityUserMapInput` via:
//
//          NexusSecurityUserMap{ "key": NexusSecurityUserArgs{...} }
type NexusSecurityUserMapInput interface {
	pulumi.Input

	ToNexusSecurityUserMapOutput() NexusSecurityUserMapOutput
	ToNexusSecurityUserMapOutputWithContext(context.Context) NexusSecurityUserMapOutput
}

type NexusSecurityUserMap map[string]NexusSecurityUserInput

func (NexusSecurityUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityUser)(nil)).Elem()
}

func (i NexusSecurityUserMap) ToNexusSecurityUserMapOutput() NexusSecurityUserMapOutput {
	return i.ToNexusSecurityUserMapOutputWithContext(context.Background())
}

func (i NexusSecurityUserMap) ToNexusSecurityUserMapOutputWithContext(ctx context.Context) NexusSecurityUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserMapOutput)
}

type NexusSecurityUserOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityUser)(nil)).Elem()
}

func (o NexusSecurityUserOutput) ToNexusSecurityUserOutput() NexusSecurityUserOutput {
	return o
}

func (o NexusSecurityUserOutput) ToNexusSecurityUserOutputWithContext(ctx context.Context) NexusSecurityUserOutput {
	return o
}

// The email address associated with the user.
func (o NexusSecurityUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// The first name of the user.
func (o NexusSecurityUserOutput) Firstname() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringOutput { return v.Firstname }).(pulumi.StringOutput)
}

// The last name of the user.
func (o NexusSecurityUserOutput) Lastname() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringOutput { return v.Lastname }).(pulumi.StringOutput)
}

// The password for the user.
func (o NexusSecurityUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The roles which the user has been assigned within Nexus.
func (o NexusSecurityUserOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

// The user's status, e.g. active or disabled.
func (o NexusSecurityUserOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// The userid which is required for login. This value cannot be changed.
func (o NexusSecurityUserOutput) Userid() pulumi.StringOutput {
	return o.ApplyT(func(v *NexusSecurityUser) pulumi.StringOutput { return v.Userid }).(pulumi.StringOutput)
}

type NexusSecurityUserArrayOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityUser)(nil)).Elem()
}

func (o NexusSecurityUserArrayOutput) ToNexusSecurityUserArrayOutput() NexusSecurityUserArrayOutput {
	return o
}

func (o NexusSecurityUserArrayOutput) ToNexusSecurityUserArrayOutputWithContext(ctx context.Context) NexusSecurityUserArrayOutput {
	return o
}

func (o NexusSecurityUserArrayOutput) Index(i pulumi.IntInput) NexusSecurityUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NexusSecurityUser {
		return vs[0].([]*NexusSecurityUser)[vs[1].(int)]
	}).(NexusSecurityUserOutput)
}

type NexusSecurityUserMapOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityUser)(nil)).Elem()
}

func (o NexusSecurityUserMapOutput) ToNexusSecurityUserMapOutput() NexusSecurityUserMapOutput {
	return o
}

func (o NexusSecurityUserMapOutput) ToNexusSecurityUserMapOutputWithContext(ctx context.Context) NexusSecurityUserMapOutput {
	return o
}

func (o NexusSecurityUserMapOutput) MapIndex(k pulumi.StringInput) NexusSecurityUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NexusSecurityUser {
		return vs[0].(map[string]*NexusSecurityUser)[vs[1].(string)]
	}).(NexusSecurityUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserInput)(nil)).Elem(), &NexusSecurityUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserArrayInput)(nil)).Elem(), NexusSecurityUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserMapInput)(nil)).Elem(), NexusSecurityUserMap{})
	pulumi.RegisterOutputType(NexusSecurityUserOutput{})
	pulumi.RegisterOutputType(NexusSecurityUserArrayOutput{})
	pulumi.RegisterOutputType(NexusSecurityUserMapOutput{})
}
