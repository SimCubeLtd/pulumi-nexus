// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nexus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NexusSecurityUserToken struct {
	pulumi.CustomResourceState

	// Activate the feature of user tokens.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Require user tokens for repository authentication. This does not effect UI access.
	ProtectContent pulumi.BoolPtrOutput `pulumi:"protectContent"`
}

// NewNexusSecurityUserToken registers a new resource with the given unique name, arguments, and options.
func NewNexusSecurityUserToken(ctx *pulumi.Context,
	name string, args *NexusSecurityUserTokenArgs, opts ...pulumi.ResourceOption) (*NexusSecurityUserToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NexusSecurityUserToken
	err := ctx.RegisterResource("nexus:index/nexusSecurityUserToken:NexusSecurityUserToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNexusSecurityUserToken gets an existing NexusSecurityUserToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNexusSecurityUserToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NexusSecurityUserTokenState, opts ...pulumi.ResourceOption) (*NexusSecurityUserToken, error) {
	var resource NexusSecurityUserToken
	err := ctx.ReadResource("nexus:index/nexusSecurityUserToken:NexusSecurityUserToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NexusSecurityUserToken resources.
type nexusSecurityUserTokenState struct {
	// Activate the feature of user tokens.
	Enabled *bool `pulumi:"enabled"`
	// Require user tokens for repository authentication. This does not effect UI access.
	ProtectContent *bool `pulumi:"protectContent"`
}

type NexusSecurityUserTokenState struct {
	// Activate the feature of user tokens.
	Enabled pulumi.BoolPtrInput
	// Require user tokens for repository authentication. This does not effect UI access.
	ProtectContent pulumi.BoolPtrInput
}

func (NexusSecurityUserTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityUserTokenState)(nil)).Elem()
}

type nexusSecurityUserTokenArgs struct {
	// Activate the feature of user tokens.
	Enabled bool `pulumi:"enabled"`
	// Require user tokens for repository authentication. This does not effect UI access.
	ProtectContent *bool `pulumi:"protectContent"`
}

// The set of arguments for constructing a NexusSecurityUserToken resource.
type NexusSecurityUserTokenArgs struct {
	// Activate the feature of user tokens.
	Enabled pulumi.BoolInput
	// Require user tokens for repository authentication. This does not effect UI access.
	ProtectContent pulumi.BoolPtrInput
}

func (NexusSecurityUserTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nexusSecurityUserTokenArgs)(nil)).Elem()
}

type NexusSecurityUserTokenInput interface {
	pulumi.Input

	ToNexusSecurityUserTokenOutput() NexusSecurityUserTokenOutput
	ToNexusSecurityUserTokenOutputWithContext(ctx context.Context) NexusSecurityUserTokenOutput
}

func (*NexusSecurityUserToken) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityUserToken)(nil)).Elem()
}

func (i *NexusSecurityUserToken) ToNexusSecurityUserTokenOutput() NexusSecurityUserTokenOutput {
	return i.ToNexusSecurityUserTokenOutputWithContext(context.Background())
}

func (i *NexusSecurityUserToken) ToNexusSecurityUserTokenOutputWithContext(ctx context.Context) NexusSecurityUserTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserTokenOutput)
}

// NexusSecurityUserTokenArrayInput is an input type that accepts NexusSecurityUserTokenArray and NexusSecurityUserTokenArrayOutput values.
// You can construct a concrete instance of `NexusSecurityUserTokenArrayInput` via:
//
//          NexusSecurityUserTokenArray{ NexusSecurityUserTokenArgs{...} }
type NexusSecurityUserTokenArrayInput interface {
	pulumi.Input

	ToNexusSecurityUserTokenArrayOutput() NexusSecurityUserTokenArrayOutput
	ToNexusSecurityUserTokenArrayOutputWithContext(context.Context) NexusSecurityUserTokenArrayOutput
}

type NexusSecurityUserTokenArray []NexusSecurityUserTokenInput

func (NexusSecurityUserTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityUserToken)(nil)).Elem()
}

func (i NexusSecurityUserTokenArray) ToNexusSecurityUserTokenArrayOutput() NexusSecurityUserTokenArrayOutput {
	return i.ToNexusSecurityUserTokenArrayOutputWithContext(context.Background())
}

func (i NexusSecurityUserTokenArray) ToNexusSecurityUserTokenArrayOutputWithContext(ctx context.Context) NexusSecurityUserTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserTokenArrayOutput)
}

// NexusSecurityUserTokenMapInput is an input type that accepts NexusSecurityUserTokenMap and NexusSecurityUserTokenMapOutput values.
// You can construct a concrete instance of `NexusSecurityUserTokenMapInput` via:
//
//          NexusSecurityUserTokenMap{ "key": NexusSecurityUserTokenArgs{...} }
type NexusSecurityUserTokenMapInput interface {
	pulumi.Input

	ToNexusSecurityUserTokenMapOutput() NexusSecurityUserTokenMapOutput
	ToNexusSecurityUserTokenMapOutputWithContext(context.Context) NexusSecurityUserTokenMapOutput
}

type NexusSecurityUserTokenMap map[string]NexusSecurityUserTokenInput

func (NexusSecurityUserTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityUserToken)(nil)).Elem()
}

func (i NexusSecurityUserTokenMap) ToNexusSecurityUserTokenMapOutput() NexusSecurityUserTokenMapOutput {
	return i.ToNexusSecurityUserTokenMapOutputWithContext(context.Background())
}

func (i NexusSecurityUserTokenMap) ToNexusSecurityUserTokenMapOutputWithContext(ctx context.Context) NexusSecurityUserTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusSecurityUserTokenMapOutput)
}

type NexusSecurityUserTokenOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusSecurityUserToken)(nil)).Elem()
}

func (o NexusSecurityUserTokenOutput) ToNexusSecurityUserTokenOutput() NexusSecurityUserTokenOutput {
	return o
}

func (o NexusSecurityUserTokenOutput) ToNexusSecurityUserTokenOutputWithContext(ctx context.Context) NexusSecurityUserTokenOutput {
	return o
}

// Activate the feature of user tokens.
func (o NexusSecurityUserTokenOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *NexusSecurityUserToken) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Require user tokens for repository authentication. This does not effect UI access.
func (o NexusSecurityUserTokenOutput) ProtectContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NexusSecurityUserToken) pulumi.BoolPtrOutput { return v.ProtectContent }).(pulumi.BoolPtrOutput)
}

type NexusSecurityUserTokenArrayOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NexusSecurityUserToken)(nil)).Elem()
}

func (o NexusSecurityUserTokenArrayOutput) ToNexusSecurityUserTokenArrayOutput() NexusSecurityUserTokenArrayOutput {
	return o
}

func (o NexusSecurityUserTokenArrayOutput) ToNexusSecurityUserTokenArrayOutputWithContext(ctx context.Context) NexusSecurityUserTokenArrayOutput {
	return o
}

func (o NexusSecurityUserTokenArrayOutput) Index(i pulumi.IntInput) NexusSecurityUserTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NexusSecurityUserToken {
		return vs[0].([]*NexusSecurityUserToken)[vs[1].(int)]
	}).(NexusSecurityUserTokenOutput)
}

type NexusSecurityUserTokenMapOutput struct{ *pulumi.OutputState }

func (NexusSecurityUserTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NexusSecurityUserToken)(nil)).Elem()
}

func (o NexusSecurityUserTokenMapOutput) ToNexusSecurityUserTokenMapOutput() NexusSecurityUserTokenMapOutput {
	return o
}

func (o NexusSecurityUserTokenMapOutput) ToNexusSecurityUserTokenMapOutputWithContext(ctx context.Context) NexusSecurityUserTokenMapOutput {
	return o
}

func (o NexusSecurityUserTokenMapOutput) MapIndex(k pulumi.StringInput) NexusSecurityUserTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NexusSecurityUserToken {
		return vs[0].(map[string]*NexusSecurityUserToken)[vs[1].(string)]
	}).(NexusSecurityUserTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserTokenInput)(nil)).Elem(), &NexusSecurityUserToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserTokenArrayInput)(nil)).Elem(), NexusSecurityUserTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusSecurityUserTokenMapInput)(nil)).Elem(), NexusSecurityUserTokenMap{})
	pulumi.RegisterOutputType(NexusSecurityUserTokenOutput{})
	pulumi.RegisterOutputType(NexusSecurityUserTokenArrayOutput{})
	pulumi.RegisterOutputType(NexusSecurityUserTokenMapOutput{})
}
