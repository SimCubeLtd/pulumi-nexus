// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getNexusBlobstore(args: GetNexusBlobstoreArgs, opts?: pulumi.InvokeOptions): Promise<GetNexusBlobstoreResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("nexus:index/getNexusBlobstore:GetNexusBlobstore", {
        "bucketConfiguration": args.bucketConfiguration,
        "name": args.name,
        "path": args.path,
        "softQuota": args.softQuota,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking GetNexusBlobstore.
 */
export interface GetNexusBlobstoreArgs {
    bucketConfiguration?: inputs.GetNexusBlobstoreBucketConfiguration;
    name: string;
    path?: string;
    softQuota?: inputs.GetNexusBlobstoreSoftQuota;
    type?: string;
}

/**
 * A collection of values returned by GetNexusBlobstore.
 */
export interface GetNexusBlobstoreResult {
    readonly availableSpaceInBytes: number;
    readonly blobCount: number;
    readonly bucketConfiguration?: outputs.GetNexusBlobstoreBucketConfiguration;
    readonly id: string;
    readonly name: string;
    readonly path?: string;
    readonly softQuota?: outputs.GetNexusBlobstoreSoftQuota;
    readonly totalSizeInBytes: number;
    readonly type?: string;
}

export function getNexusBlobstoreOutput(args: GetNexusBlobstoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNexusBlobstoreResult> {
    return pulumi.output(args).apply(a => getNexusBlobstore(a, opts))
}

/**
 * A collection of arguments for invoking GetNexusBlobstore.
 */
export interface GetNexusBlobstoreOutputArgs {
    bucketConfiguration?: pulumi.Input<inputs.GetNexusBlobstoreBucketConfigurationArgs>;
    name: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    softQuota?: pulumi.Input<inputs.GetNexusBlobstoreSoftQuotaArgs>;
    type?: pulumi.Input<string>;
}
