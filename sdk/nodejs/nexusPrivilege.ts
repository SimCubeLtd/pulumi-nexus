// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NexusPrivilege extends pulumi.CustomResource {
    /**
     * Get an existing NexusPrivilege resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NexusPrivilegeState, opts?: pulumi.CustomResourceOptions): NexusPrivilege {
        return new NexusPrivilege(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nexus:index/nexusPrivilege:NexusPrivilege';

    /**
     * Returns true if the given object is an instance of NexusPrivilege.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NexusPrivilege {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NexusPrivilege.__pulumiType;
    }

    /**
     * Actions for the privilege (browse, read, edit, add, delete, all and run)
     */
    public readonly actions!: pulumi.Output<string[]>;
    /**
     * The content selector for the privilege
     */
    public readonly contentSelector!: pulumi.Output<string | undefined>;
    /**
     * A description of the privilege
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The domain of the privilege
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
     * `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * The name of the privilege
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The wildcard privilege pattern
     */
    public readonly pattern!: pulumi.Output<string | undefined>;
    /**
     * The repository of the privilege
     */
    public readonly repository!: pulumi.Output<string | undefined>;
    /**
     * The script name related to the privilege
     */
    public readonly scriptName!: pulumi.Output<string | undefined>;
    /**
     * The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
     * `repository-view`, `script`, `wildcard`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a NexusPrivilege resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NexusPrivilegeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NexusPrivilegeArgs | NexusPrivilegeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NexusPrivilegeState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["contentSelector"] = state ? state.contentSelector : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["scriptName"] = state ? state.scriptName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as NexusPrivilegeArgs | undefined;
            if ((!args || args.actions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["contentSelector"] = args ? args.contentSelector : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["scriptName"] = args ? args.scriptName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NexusPrivilege.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NexusPrivilege resources.
 */
export interface NexusPrivilegeState {
    /**
     * Actions for the privilege (browse, read, edit, add, delete, all and run)
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The content selector for the privilege
     */
    contentSelector?: pulumi.Input<string>;
    /**
     * A description of the privilege
     */
    description?: pulumi.Input<string>;
    /**
     * The domain of the privilege
     */
    domain?: pulumi.Input<string>;
    /**
     * The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
     * `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
     */
    format?: pulumi.Input<string>;
    /**
     * The name of the privilege
     */
    name?: pulumi.Input<string>;
    /**
     * The wildcard privilege pattern
     */
    pattern?: pulumi.Input<string>;
    /**
     * The repository of the privilege
     */
    repository?: pulumi.Input<string>;
    /**
     * The script name related to the privilege
     */
    scriptName?: pulumi.Input<string>;
    /**
     * The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
     * `repository-view`, `script`, `wildcard`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NexusPrivilege resource.
 */
export interface NexusPrivilegeArgs {
    /**
     * Actions for the privilege (browse, read, edit, add, delete, all and run)
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The content selector for the privilege
     */
    contentSelector?: pulumi.Input<string>;
    /**
     * A description of the privilege
     */
    description?: pulumi.Input<string>;
    /**
     * The domain of the privilege
     */
    domain?: pulumi.Input<string>;
    /**
     * The format of the privilege. Possible values: `apt`, `bower`, `conan`, `docker`, `gitlfs`, `go`, `helm`, `maven2`,
     * `npm`, `nuget`, `p2`, `pypi`, `raw`, `rubygems`, `yum`
     */
    format?: pulumi.Input<string>;
    /**
     * The name of the privilege
     */
    name?: pulumi.Input<string>;
    /**
     * The wildcard privilege pattern
     */
    pattern?: pulumi.Input<string>;
    /**
     * The repository of the privilege
     */
    repository?: pulumi.Input<string>;
    /**
     * The script name related to the privilege
     */
    scriptName?: pulumi.Input<string>;
    /**
     * The type of the privilege. Possible values: `application`, `repository-admin`, `repository-content-selector`,
     * `repository-view`, `script`, `wildcard`
     */
    type: pulumi.Input<string>;
}
